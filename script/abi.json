{
  "abi": [
    {
      "type": "function",
      "name": "UPGRADE_INTERFACE_VERSION",
      "inputs": [],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "addCollateralTokens",
      "inputs": [
        { "name": "_tokens", "type": "address[]", "internalType": "address[]" },
        {
          "name": "_priceFeeds",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "addLoanableToken",
      "inputs": [
        { "name": "_token", "type": "address", "internalType": "address" },
        { "name": "_priceFeed", "type": "bytes32", "internalType": "bytes32" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "createLendingRequest",
      "inputs": [
        { "name": "_amount", "type": "uint256", "internalType": "uint256" },
        { "name": "_interest", "type": "uint8", "internalType": "uint8" },
        { "name": "_returnDate", "type": "uint256", "internalType": "uint256" },
        {
          "name": "_loanCurrency",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "depositCollateral",
      "inputs": [
        {
          "name": "_tokenCollateralAddress",
          "type": "address",
          "internalType": "address"
        },
        {
          "name": "_amountOfCollateral",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "getAccountCollateralValue",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        {
          "name": "_totalCollateralValueInUsd",
          "type": "uint256",
          "internalType": "uint256"
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllCollateralToken",
      "inputs": [],
      "outputs": [
        { "name": "", "type": "address[]", "internalType": "address[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllOfferForUser",
      "inputs": [
        { "name": "_borrower", "type": "address", "internalType": "address" },
        { "name": "_requestId", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct Protocol.Offer[]",
          "components": [
            { "name": "offerId", "type": "uint256", "internalType": "uint256" },
            {
              "name": "tokenAddr",
              "type": "address",
              "internalType": "address"
            },
            { "name": "author", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "interest", "type": "uint8", "internalType": "uint8" },
            {
              "name": "returnDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "offerStatus",
              "type": "uint8",
              "internalType": "enum Protocol.OfferStatus"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getAllRequest",
      "inputs": [],
      "outputs": [
        {
          "name": "",
          "type": "tuple[]",
          "internalType": "struct Protocol.Request[]",
          "components": [
            { "name": "requestId", "type": "uint96", "internalType": "uint96" },
            { "name": "author", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "interest", "type": "uint8", "internalType": "uint8" },
            {
              "name": "_totalRepayment",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "offer",
              "type": "tuple[]",
              "internalType": "struct Protocol.Offer[]",
              "components": [
                {
                  "name": "offerId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tokenAddr",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "author",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "interest",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "returnDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offerStatus",
                  "type": "uint8",
                  "internalType": "enum Protocol.OfferStatus"
                }
              ]
            },
            {
              "name": "returnDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "loanRequestAddr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum Protocol.Status"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getLoanableAssets",
      "inputs": [],
      "outputs": [
        { "name": "_assets", "type": "address[]", "internalType": "address[]" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getRequestById",
      "inputs": [
        { "name": "_requestId", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Protocol.Request",
          "components": [
            { "name": "requestId", "type": "uint96", "internalType": "uint96" },
            { "name": "author", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "interest", "type": "uint8", "internalType": "uint8" },
            {
              "name": "_totalRepayment",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "offer",
              "type": "tuple[]",
              "internalType": "struct Protocol.Offer[]",
              "components": [
                {
                  "name": "offerId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tokenAddr",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "author",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "interest",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "returnDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offerStatus",
                  "type": "uint8",
                  "internalType": "enum Protocol.OfferStatus"
                }
              ]
            },
            {
              "name": "returnDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "loanRequestAddr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum Protocol.Status"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUsdValue",
      "inputs": [
        { "name": "_token", "type": "address", "internalType": "address" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserEmail",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "string", "internalType": "string" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "getUserRequest",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_requestId", "type": "uint96", "internalType": "uint96" }
      ],
      "outputs": [
        {
          "name": "",
          "type": "tuple",
          "internalType": "struct Protocol.Request",
          "components": [
            { "name": "requestId", "type": "uint96", "internalType": "uint96" },
            { "name": "author", "type": "address", "internalType": "address" },
            { "name": "amount", "type": "uint256", "internalType": "uint256" },
            { "name": "interest", "type": "uint8", "internalType": "uint8" },
            {
              "name": "_totalRepayment",
              "type": "uint256",
              "internalType": "uint256"
            },
            {
              "name": "offer",
              "type": "tuple[]",
              "internalType": "struct Protocol.Offer[]",
              "components": [
                {
                  "name": "offerId",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "tokenAddr",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "author",
                  "type": "address",
                  "internalType": "address"
                },
                {
                  "name": "amount",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "interest",
                  "type": "uint8",
                  "internalType": "uint8"
                },
                {
                  "name": "returnDate",
                  "type": "uint256",
                  "internalType": "uint256"
                },
                {
                  "name": "offerStatus",
                  "type": "uint8",
                  "internalType": "enum Protocol.OfferStatus"
                }
              ]
            },
            {
              "name": "returnDate",
              "type": "uint256",
              "internalType": "uint256"
            },
            { "name": "lender", "type": "address", "internalType": "address" },
            {
              "name": "loanRequestAddr",
              "type": "address",
              "internalType": "address"
            },
            {
              "name": "status",
              "type": "uint8",
              "internalType": "enum Protocol.Status"
            }
          ]
        }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "get_gitCoinPoint",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [
        { "name": "_score", "type": "uint256", "internalType": "uint256" }
      ],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "gets_addressToCollateralDeposited",
      "inputs": [
        { "name": "_sender", "type": "address", "internalType": "address" },
        { "name": "_tokenAddr", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "uint256", "internalType": "uint256" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "initialize",
      "inputs": [
        {
          "name": "_initialOwner",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_tokens", "type": "address[]", "internalType": "address[]" },
        {
          "name": "_priceFeeds",
          "type": "bytes32[]",
          "internalType": "bytes32[]"
        },
        {
          "name": "_peerAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "pythContract", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "isVerified",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" }
      ],
      "outputs": [{ "name": "", "type": "bool", "internalType": "bool" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "makeLendingOffer",
      "inputs": [
        { "name": "_borrower", "type": "address", "internalType": "address" },
        { "name": "_requestId", "type": "uint96", "internalType": "uint96" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" },
        { "name": "_interest", "type": "uint8", "internalType": "uint8" },
        {
          "name": "_returnedDate",
          "type": "uint256",
          "internalType": "uint256"
        },
        {
          "name": "_tokenAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "owner",
      "inputs": [],
      "outputs": [{ "name": "", "type": "address", "internalType": "address" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "proxiableUUID",
      "inputs": [],
      "outputs": [{ "name": "", "type": "bytes32", "internalType": "bytes32" }],
      "stateMutability": "view"
    },
    {
      "type": "function",
      "name": "removeCollateralTokens",
      "inputs": [
        { "name": "_tokens", "type": "address[]", "internalType": "address[]" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "renounceOwnership",
      "inputs": [],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "repayLoan",
      "inputs": [
        { "name": "_requestId", "type": "uint96", "internalType": "uint96" },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "respondToLendingOffer",
      "inputs": [
        { "name": "_requestId", "type": "uint96", "internalType": "uint96" },
        { "name": "_offerId", "type": "uint96", "internalType": "uint96" },
        {
          "name": "_status",
          "type": "uint8",
          "internalType": "enum Protocol.OfferStatus"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "serviceRequest",
      "inputs": [
        { "name": "_borrower", "type": "address", "internalType": "address" },
        { "name": "_requestId", "type": "uint8", "internalType": "uint8" },
        {
          "name": "_tokenAddress",
          "type": "address",
          "internalType": "address"
        }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "transferOwnership",
      "inputs": [
        { "name": "newOwner", "type": "address", "internalType": "address" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateEmail",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_email", "type": "string", "internalType": "string" },
        { "name": "_status", "type": "bool", "internalType": "bool" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updateGPScore",
      "inputs": [
        { "name": "_user", "type": "address", "internalType": "address" },
        { "name": "_score", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "function",
      "name": "updatePriceFeeds",
      "inputs": [
        { "name": "priceUpdate", "type": "bytes[]", "internalType": "bytes[]" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "upgradeToAndCall",
      "inputs": [
        {
          "name": "newImplementation",
          "type": "address",
          "internalType": "address"
        },
        { "name": "data", "type": "bytes", "internalType": "bytes" }
      ],
      "outputs": [],
      "stateMutability": "payable"
    },
    {
      "type": "function",
      "name": "withdrawCollateral",
      "inputs": [
        {
          "name": "_tokenCollateralAddress",
          "type": "address",
          "internalType": "address"
        },
        { "name": "_amount", "type": "uint256", "internalType": "uint256" }
      ],
      "outputs": [],
      "stateMutability": "nonpayable"
    },
    {
      "type": "event",
      "name": "CollateralDeposited",
      "inputs": [
        {
          "name": "_sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_value",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "CollateralWithdrawn",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_tokenCollateralAddress",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Initialized",
      "inputs": [
        {
          "name": "version",
          "type": "uint64",
          "indexed": false,
          "internalType": "uint64"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "LoanRepayment",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OfferAccepted",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "id",
          "type": "uint96",
          "indexed": false,
          "internalType": "uint96"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OfferCreated",
      "inputs": [
        {
          "name": "_lender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "indexed_tokenAddress",
          "type": "address",
          "indexed": false,
          "internalType": "address"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_requestId",
          "type": "uint96",
          "indexed": true,
          "internalType": "uint96"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "OwnershipTransferred",
      "inputs": [
        {
          "name": "previousOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newOwner",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RequestCreated",
      "inputs": [
        {
          "name": "_borrower",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "requestId",
          "type": "uint96",
          "indexed": true,
          "internalType": "uint96"
        },
        {
          "name": "_amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        },
        {
          "name": "_interest",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "RespondToLendingOffer",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_offerId",
          "type": "uint256",
          "indexed": true,
          "internalType": "uint256"
        },
        {
          "name": "_status",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "_offerStatus",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "ServiceRequestSuccessful",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_borrower",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_requestId",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        },
        {
          "name": "amount",
          "type": "uint256",
          "indexed": false,
          "internalType": "uint256"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UpdateLoanableToken",
      "inputs": [
        {
          "name": "_token",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "_priceFeed",
          "type": "bytes32",
          "indexed": false,
          "internalType": "bytes32"
        },
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "UpdatedCollateralTokens",
      "inputs": [
        {
          "name": "sender",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        },
        {
          "name": "newTokensCount",
          "type": "uint8",
          "indexed": false,
          "internalType": "uint8"
        }
      ],
      "anonymous": false
    },
    {
      "type": "event",
      "name": "Upgraded",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "indexed": true,
          "internalType": "address"
        }
      ],
      "anonymous": false
    },
    {
      "type": "error",
      "name": "AddressEmptyCode",
      "inputs": [
        { "name": "target", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "ERC1967InvalidImplementation",
      "inputs": [
        {
          "name": "implementation",
          "type": "address",
          "internalType": "address"
        }
      ]
    },
    { "type": "error", "name": "ERC1967NonPayable", "inputs": [] },
    { "type": "error", "name": "FailedInnerCall", "inputs": [] },
    { "type": "error", "name": "InvalidInitialization", "inputs": [] },
    { "type": "error", "name": "NotInitializing", "inputs": [] },
    {
      "type": "error",
      "name": "OwnableInvalidOwner",
      "inputs": [
        { "name": "owner", "type": "address", "internalType": "address" }
      ]
    },
    {
      "type": "error",
      "name": "OwnableUnauthorizedAccount",
      "inputs": [
        { "name": "account", "type": "address", "internalType": "address" }
      ]
    },
    { "type": "error", "name": "Protocol__BreaksHealthFactor", "inputs": [] },
    { "type": "error", "name": "Protocol__DateMustBeInFuture", "inputs": [] },
    { "type": "error", "name": "Protocol__EmailNotVerified", "inputs": [] },
    {
      "type": "error",
      "name": "Protocol__InsufficientAllowance",
      "inputs": []
    },
    { "type": "error", "name": "Protocol__InsufficientBalance", "inputs": [] },
    {
      "type": "error",
      "name": "Protocol__InsufficientCollateral",
      "inputs": []
    },
    {
      "type": "error",
      "name": "Protocol__InsufficientCollateralDeposited",
      "inputs": []
    },
    { "type": "error", "name": "Protocol__InvalidAddress", "inputs": [] },
    { "type": "error", "name": "Protocol__InvalidAmount", "inputs": [] },
    { "type": "error", "name": "Protocol__InvalidId", "inputs": [] },
    { "type": "error", "name": "Protocol__InvalidToken", "inputs": [] },
    { "type": "error", "name": "Protocol__MustBeMoreThanZero", "inputs": [] },
    { "type": "error", "name": "Protocol__OfferNotOpen", "inputs": [] },
    { "type": "error", "name": "Protocol__RequestNotOpen", "inputs": [] },
    { "type": "error", "name": "Protocol__RequestNotServiced", "inputs": [] },
    { "type": "error", "name": "Protocol__TokenNotAllowed", "inputs": [] },
    { "type": "error", "name": "Protocol__TokenNotLoanable", "inputs": [] },
    { "type": "error", "name": "Protocol__TransferFailed", "inputs": [] },
    { "type": "error", "name": "Protocol__Unauthorized", "inputs": [] },
    {
      "type": "error",
      "name": "Protocol__tokensAndPriceFeedsArrayMustBeSameLength",
      "inputs": []
    },
    { "type": "error", "name": "UUPSUnauthorizedCallContext", "inputs": [] },
    {
      "type": "error",
      "name": "UUPSUnsupportedProxiableUUID",
      "inputs": [
        { "name": "slot", "type": "bytes32", "internalType": "bytes32" }
      ]
    }
  ],
  "bytecode": {
    "object": "",
    "sourceMap": "833:28981:52:-:0;;;1171:4:26;1128:48;;833:28981:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;",
    "linkReferences": {}
  },
  "deployedBytecode": {
    "object": "",
    "sourceMap": "833:28981:52:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25722:432;;;;;;;;;;-1:-1:-1;25722:432:52;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;18915:213;;;;;;;;;;-1:-1:-1;18915:213:52;;;;;:::i;:::-;;:::i;:::-;;27336:169;;;;;;;;;;-1:-1:-1;27336:169:52;;;;;:::i;:::-;;:::i;5110:1566::-;;;;;;;;;;-1:-1:-1;5110:1566:52;;;;;:::i;:::-;;:::i;28531:767::-;;;;;;;;;;-1:-1:-1;28531:767:52;;;;;:::i;:::-;;:::i;15193:1003::-;;;;;;;;;;-1:-1:-1;15193:1003:52;;;;;:::i;:::-;;:::i;12864:2141::-;;;;;;;;;;-1:-1:-1;12864:2141:52;;;;;:::i;:::-;;:::i;18531:130::-;;;;;;;;;;-1:-1:-1;18531:130:52;;;;;:::i;:::-;;:::i;4161:214:26:-;;;;;;:::i;:::-;;:::i;25507:209:52:-;;;;;;;;;;-1:-1:-1;25507:209:52;;;;;:::i;:::-;-1:-1:-1;;;;;25658:39:52;;;25632:7;25658:39;;;:30;:39;;;;;;;;:51;;;;;;;;;;;;;25507:209;;;;10214:25:54;;;10202:2;10187:18;25507:209:52;10068:177:54;3708:134:26;;;;;;;;;;;;;:::i;20623:1095:52:-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;24994:242::-;;;;;;;;;;-1:-1:-1;24994:242:52;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3155:101:24:-;;;;;;;;;;;;;:::i;23367:419:52:-;;;;;;;;;;-1:-1:-1;23367:419:52;;;;;:::i;:::-;;:::i;28242:148::-;;;;;;;;;;;;;:::i;:::-;;;;;;;:::i;18075:294::-;;;;;;;;;;-1:-1:-1;18075:294:52;;;;;:::i;:::-;;:::i;2441:144:24:-;;;;;;;;;;-1:-1:-1;1313:22:24;2570:8;2441:144;;-1:-1:-1;;;;;2570:8:24;;;13226:51:54;;13214:2;13199:18;2441:144:24;13080:203:54;19797:124:52;;;;;;;;;;-1:-1:-1;19797:124:52;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;3822:799::-;;;;;;;;;;-1:-1:-1;3822:799:52;;;;;:::i;:::-;;:::i;1819:58:26:-;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;1819:58:26;;;;;22549:115:52;;;;;;;;;;;;;:::i;19672:118::-;;;;;;;;;;-1:-1:-1;19672:118:52;;;;;:::i;:::-;-1:-1:-1;;;;;19752:20:52;19730:4;19752:20;;;:13;:20;;;;;:31;;;-1:-1:-1;;;19752:31:52;;;;;19672:118;;;;14109:14:54;;14102:22;14084:41;;14072:2;14057:18;19672:118:52;13944:187:54;8288:1312:52;;;;;;;;;;-1:-1:-1;8288:1312:52;;;;;:::i;:::-;;:::i;6682:1105::-;;;;;;;;;;-1:-1:-1;6682:1105:52;;;;;:::i;:::-;;:::i;24201:524::-;;;;;;;;;;-1:-1:-1;24201:524:52;;;;;:::i;:::-;;:::i;16411:588::-;;;;;;;;;;-1:-1:-1;16411:588:52;;;;;:::i;:::-;;:::i;9897:1127::-;;;;;;;;;;-1:-1:-1;9897:1127:52;;;;;:::i;:::-;;:::i;19314:189::-;;;;;;:::i;:::-;;:::i;20464:153::-;;;;;;;;;;-1:-1:-1;20464:153:52;;;;;:::i;:::-;-1:-1:-1;;;;;20577:20:52;20542:14;20577:20;;;:13;:20;;;;;:33;;;;20464:153;3405:215:24;;;;;;;;;;-1:-1:-1;3405:215:24;;;;;:::i;:::-;;:::i;17134:706:52:-;;;;;;;;;;-1:-1:-1;17134:706:52;;;;;:::i;:::-;;:::i;25722:432::-;25802:14;;:::i;:::-;25832:10;-1:-1:-1;;;;;25832:15:52;25846:1;25832:15;25828:49;;25856:21;;-1:-1:-1;;;25856:21:52;;;;;;;;;;;25828:49;25905:10;:17;-1:-1:-1;;;;;25891:31:52;;;25887:65;;25931:21;;-1:-1:-1;;;25931:21:52;;;;;;;;;;;25887:65;25962:23;25988:10;25999:14;26012:1;25999:10;:14;:::i;:::-;-1:-1:-1;;;;;25988:26:52;;;;;;;;;:::i;:::-;;;;;;;;;25962:52;;;;;;;;25988:26;;;;;;;25962:52;;-1:-1:-1;;;;;25962:52:52;;;;-1:-1:-1;;;;;;;;25962:52:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;25988:26;;25962:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25962:52:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;25962:52:52;;;-1:-1:-1;25962:52:52;;;;;;;;;;;;-1:-1:-1;;;;;25962:52:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;25962:52:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;26027:15:52;;;;25962:52;;-1:-1:-1;;;;;;26027:29:52;;26024:67;;26065:26;;-1:-1:-1;;;26065:26:52;;;;;;;;;;;26024:67;26114:15;;;;;-1:-1:-1;;;;;26106:24:52;;;;;;;:7;:24;;;;;;-1:-1:-1;;;;;26106:36:52;;;;;;;;;;;26099:43;;;;;;;;;;;;;;-1:-1:-1;;;26099:43:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;26106:24;26099:43;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;26099:43:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;26099:43:52;;;-1:-1:-1;26099:43:52;;;;;;;;;;;;-1:-1:-1;;;;;26099:43:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;26099:43:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;26099:43:52;25722:432;-1:-1:-1;;;25722:432:52:o;18915:213::-;-1:-1:-1;;;;;19035:20:52;;;;;;:13;:20;;;;;:31;;;:41;;-1:-1:-1;;;;19035:41:52;-1:-1:-1;;;19035:41:52;;;;;;;19086:35;19115:6;19035:20;19086:35;:::i;:::-;;18915:213;;;:::o;27336:169::-;27439:14;;:::i;:::-;-1:-1:-1;;;;;27472:14:52;;;;;;;:7;:14;;;;;;;;-1:-1:-1;;;;;27472:26:52;;;;;;;;;;;27465:33;;;;;;;;;;;;;;-1:-1:-1;;;27465:33:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;27472:26;27465:33;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;27465:33:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;27465:33:52;;;-1:-1:-1;27465:33:52;;;;;;;;;;;;-1:-1:-1;;;;;27465:33:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;27465:33:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;-1:-1:-1;27465:33:52;-1:-1:-1;27336:169:52;;;;;:::o;5110:1566::-;5275:32;5299:7;5275:23;:32::i;:::-;-1:-1:-1;;;;;5323:27:52;;;;;;:12;:27;;;;;;;;5318:94;;5373:28;;-1:-1:-1;;;5373:28:52;;;;;;;;;;;5318:94;5421:27;5437:10;5421:15;:27::i;:::-;5458:21;5482:35;5494:13;5509:7;5482:11;:35::i;:::-;5458:59;;5547:1;5531:13;:17;5527:55;;;5557:25;;-1:-1:-1;;;5557:25:52;;;;;;;;;;;5527:55;5593:37;5633:59;5672:10;5633:25;:59::i;:::-;5593:99;-1:-1:-1;5702:25:52;5769:3;5731:34;5593:99;5763:2;5731:34;:::i;:::-;5730:42;;;;:::i;:::-;5814:10;5800:25;;;;:13;:25;;;;;:44;;;5702:70;;-1:-1:-1;5702:70:52;;5800:60;;5847:13;;5800:60;:::i;:::-;:93;5783:187;;5925:34;;-1:-1:-1;;;5925:34:52;;;;;;;;;;;5783:187;6002:9;;:13;;-1:-1:-1;;;;;6002:9:52;;:13;:::i;:::-;5990:9;:25;;-1:-1:-1;;5990:25:52;-1:-1:-1;;;;;5990:25:52;;;;;;;;;6063:10;-1:-1:-1;6055:19:52;;;:7;:19;;;;;;;;:30;;;;;;;;;-1:-1:-1;;;6138:31:52;;;;;;;;-1:-1:-1;6179:18:52;;:28;;;6217:20;;;:32;;-1:-1:-1;;6217:32:52;;;;;;;6259:22;;;:36;;;6335:128;6259:36;6179:28;6217:32;6440:13;6335:22;:128::i;:::-;6305:27;;;:158;;;6473:27;;;:43;;-1:-1:-1;;;;;6473:43:52;;;-1:-1:-1;;;;;;6526:32:52;;;;;;;;;;6568:10;:28;;-1:-1:-1;6568:28:52;;;;;-1:-1:-1;6568:28:52;;;;;;;;;;;;;;-1:-1:-1;;6568:28:52;-1:-1:-1;;;;;6568:28:52;;;;;;;;;;-1:-1:-1;;;6568:28:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;6568:28:52;;;;;;;;;;;;;;;;;;;;;;6305:27;;6568:28;;;;;;;;:::i;:::-;-1:-1:-1;6568:28:52;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;;6568:28:52;;;-1:-1:-1;;;;;6568:28:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;6568:28:52;;;;;;;-1:-1:-1;;;;;;6568:28:52;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;6639:9:52;;6612:57;;;20873:25:54;;;20946:4;20934:17;;20929:2;20914:18;;20907:45;-1:-1:-1;;;;;6639:9:52;;;;-1:-1:-1;6627:10:52;;6612:57;;20846:18:54;6612:57:52;;;;;;;;5265:1411;;;;5110:1566;;;;:::o;28531:767::-;8870:21:25;4302:15;;-1:-1:-1;;;4302:15:25;;;;4301:16;;-1:-1:-1;;;;;4348:14:25;4158:30;4726:16;;:34;;;;;4746:14;4726:34;4706:54;;4770:17;4790:11;-1:-1:-1;;;;;4790:16:25;4805:1;4790:16;:50;;;;-1:-1:-1;4818:4:25;4810:25;:30;4790:50;4770:70;;4856:12;4855:13;:30;;;;;4873:12;4872:13;4855:30;4851:91;;;4908:23;;-1:-1:-1;;;4908:23:25;;;;;;;;;;;4851:91;4951:18;;-1:-1:-1;;4951:18:25;4968:1;4951:18;;;4979:67;;;;5013:22;;-1:-1:-1;;;;5013:22:25;-1:-1:-1;;;5013:22:25;;;4979:67;28749:29:52::1;28764:13;28749:14;:29::i;:::-;28820:7;:14;28798:11;:18;:36;28794:130;;28857:52;;-1:-1:-1::0;;;28857:52:52::1;;;;;;;;;;;28794:130;28938:6;28933:275;28954:11;:18;28950:1;:22;28933:275;;;29019:1;-1:-1:-1::0;;;;;28997:24:52::1;:7;29005:1;28997:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;28997:24:52::1;;28993:205;;29068:4;29041:12;:24;29054:7;29062:1;29054:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;29041:24:52::1;-1:-1:-1::0;;;;;29041:24:52::1;;;;;;;;;;;;;:31;;;;;;;;;;;;;;;;;;29090:17;29113:7;29121:1;29113:10;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;29090:34;;::::1;::::0;::::1;::::0;;-1:-1:-1;29090:34:52;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;29090:34:52::1;-1:-1:-1::0;;;;;29090:34:52;;::::1;::::0;;;::::1;::::0;;29169:14;;;;29181:1;;29169:14;::::1;;;;;:::i;:::-;;;;;;;29142:12;:24;29155:7;29163:1;29155:10;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;29142:24:52::1;-1:-1:-1::0;;;;;29142:24:52::1;;;;;;;;;;;;:41;;;;28993:205;28974:3;;28933:275;;;-1:-1:-1::0;29217:6:52::1;:32:::0;;-1:-1:-1;;;;;29217:32:52;;::::1;-1:-1:-1::0;;;;;;29217:32:52;;::::1;;::::0;;;29259:4:::1;:26:::0;;;;::::1;::::0;;;::::1;::::0;;;::::1;::::0;;5066:101:25;;;;5100:23;;-1:-1:-1;;;;5100:23:25;;;5142:14;;-1:-1:-1;21116:50:54;;5142:14:25;;21104:2:54;21089:18;5142:14:25;;;;;;;5066:101;4092:1081;;;;;28531:767:52;;;;;:::o;15193:1003::-;15312:32;15336:7;15312:23;:32::i;:::-;15354:64;15380:23;15405:12;15354:25;:64::i;:::-;15428:27;15444:10;15428:15;:27::i;:::-;15522:10;15465:23;15491:42;;;:30;:42;;;;;;;;-1:-1:-1;;;;;15491:89:52;;;;;;;;;;15594:25;;;15590:106;;;15642:43;;-1:-1:-1;;;15642:43:52;;;;;;;;;;;15590:106;15737:10;15706:42;;;;:30;:42;;;;;;;;-1:-1:-1;;;;;15706:89:52;;;;;;;;;:100;;15799:7;;15706:42;:100;;15799:7;;15706:100;:::i;:::-;;;;-1:-1:-1;15892:41:52;;-1:-1:-1;15922:10:52;15892:29;:41::i;:::-;15959:95;;-1:-1:-1;;;15959:95:52;;16013:10;15959:95;;;21484:51:54;21551:18;;;21544:34;;;15944:12:52;;-1:-1:-1;;;;;15959:40:52;;;;;21457:18:54;;15959:95:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;15944:110;;16072:7;16064:44;;;;-1:-1:-1;;;16064:44:52;;22041:2:54;16064:44:52;;;22023:21:54;22080:2;22060:18;;;22053:30;-1:-1:-1;;;22099:18:54;;;22092:54;22163:18;;16064:44:52;;;;;;;;;16124:65;;10214:25:54;;;-1:-1:-1;;;;;16124:65:52;;;16144:10;;16124:65;;10202:2:54;10187:18;16124:65:52;;;;;;;;15302:894;;15193:1003;;:::o;12864:2141::-;12997:27;13013:10;12997:15;:27::i;:::-;-1:-1:-1;;;;;13066:18:52;;13034:29;13066:18;;;:7;:18;;;;;;;;:30;;;;;;;;;;;13110:20;;;;-1:-1:-1;;;13110:20:52;;;;:35;;;;;;;;:::i;:::-;;13106:86;;13166:26;;-1:-1:-1;;;13166:26:52;;;;;;;;;;;13106:86;13206:29;;;;-1:-1:-1;;;;;13206:46:52;;;:29;;:46;13202:95;;13273:24;;-1:-1:-1;;;13273:24:52;;;;;;;;;;;13202:95;13308:20;;;:33;;-1:-1:-1;;;;;;13308:33:52;13331:10;13308:33;;;13351:20;;;:38;;13308:33;;13351:20;-1:-1:-1;;;;13351:38:52;-1:-1:-1;;;13308:33:52;13351:38;;;;-1:-1:-1;13422:20:52;;;;13548:43;;-1:-1:-1;;;13548:43:52;;13580:10;13548:43;;;13226:51:54;13422:20:52;;-1:-1:-1;;;;;13548:31:52;;;;;13199:18:54;;13548:43:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:58;13544:114;;;13627:31;;-1:-1:-1;;;13627:31:52;;;;;;;;;;;13544:114;13685:58;;-1:-1:-1;;;13685:58:52;;13717:10;13685:58;;;22593:34:54;13737:4:52;22643:18:54;;;22636:43;13758:12:52;;-1:-1:-1;;;;;13685:31:52;;;;;22528:18:54;;13685:58:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:85;13668:153;;;13788:33;;-1:-1:-1;;;13788:33:52;;;;;;;;;;;13668:153;13832:21;13856:40;13868:13;13883:12;13856:11;:40::i;:::-;14001:24;;;;14043:20;;;;14081:22;;;;14121:29;;;;13832:64;;-1:-1:-1;13907:23:52;;13961:203;;14001:24;14043:20;14081:22;;;-1:-1:-1;;;;;14121:29:52;13961:22;:203::i;:::-;13933:231;;:13;:231;:::i;:::-;14174:29;;;;:47;;;14245:20;;-1:-1:-1;;;14245:20:52;;-1:-1:-1;;;;;14245:20:52;14231:35;;;;:13;:35;;;;;:67;;;:86;;14174:47;;-1:-1:-1;14174:47:52;;14231:67;;:35;:86;;14174:47;;14231:86;:::i;:::-;;;;-1:-1:-1;;14346:20:52;;14370:1;;14332:35;;-1:-1:-1;;;14346:20:52;;-1:-1:-1;;;;;14346:20:52;14332:13;:35::i;:::-;:39;14328:111;;;14394:34;;-1:-1:-1;;;14394:34:52;;;;;;;;;;;14328:111;14526:117;;-1:-1:-1;;;14526:117:52;;14511:12;;-1:-1:-1;;;;;14526:34:52;;;;;:117;;14574:10;;14598:9;;14621:12;;14526:117;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;14511:132;;14661:7;14653:44;;;;-1:-1:-1;;;14653:44:52;;22041:2:54;14653:44:52;;;22023:21:54;22080:2;22060:18;;;22053:30;-1:-1:-1;;;22099:18:54;;;22092:54;22163:18;;14653:44:52;21839:348:54;14653:44:52;14759:20;;;:38;;-1:-1:-1;;;;14759:38:52;-1:-1:-1;;;14759:38:52;;;14867:131;;;23270:4:54;23258:17;;23240:36;;23307:2;23292:18;;23285:34;;;-1:-1:-1;;;;;14867:131:52;;;14905:10;;14867:131;;23213:18:54;14867:131:52;23070:255:54;18531:130:52;2334:13:24;:11;:13::i;:::-;-1:-1:-1;;;;;18612:20:52;;::::1;;::::0;;;:13:::1;:20;::::0;;;;:33:::1;;:42:::0;18531:130::o;4161:214:26:-;2655:13;:11;:13::i;:::-;4276:36:::1;4294:17;4276;:36::i;:::-;4322:46;4344:17;4363:4;4322:21;:46::i;:::-;4161:214:::0;;:::o;3708:134::-;3777:7;2926:20;:18;:20::i;:::-;-1:-1:-1;;;;;;;;;;;;3708:134:26;:::o;20623:1095:52:-;20703:9;;20671:16;;20715:1;-1:-1:-1;;;;;20703:9:52;;;:13;20699:47;;;20725:21;;-1:-1:-1;;;20725:21:52;;;;;;;;;;;20699:47;20760:10;:17;20780:1;-1:-1:-1;20756:55:52;;;20790:21;;-1:-1:-1;;;20790:21:52;;;;;;;;;;;20756:55;20822:18;20906:6;20901:249;20922:10;:17;20918:21;;20901:249;;;20965:8;20960:180;20984:9;;-1:-1:-1;;;;;20984:9:52;;;20979:14;;;;20960:180;;21066:1;-1:-1:-1;;;;;21022:46:52;:7;:22;21030:10;21041:1;21030:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;21030:13:52;;;21022:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;21022:25:52;;;;;;;:32;-1:-1:-1;;;21022:32:52;;;:46;21018:108;;21092:15;;;;:::i;:::-;;;;21018:108;20995:3;;;;:::i;:::-;;;;20960:180;;;-1:-1:-1;20941:3:52;;20901:249;;;;21226:30;21273:13;-1:-1:-1;;;;;21259:28:52;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;21226:61;;21297:10;21375:6;21370:311;21391:10;:17;21387:21;;21370:311;;;21434:8;21429:242;21453:9;;-1:-1:-1;;;;;21453:9:52;;;21448:14;;;;21429:242;;21535:1;-1:-1:-1;;;;;21491:46:52;:7;:22;21499:10;21510:1;21499:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;21499:13:52;;;21491:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;21491:25:52;;;;;;;:32;-1:-1:-1;;;21491:32:52;;;:46;21487:170;;21584:7;:22;21592:10;21603:1;21592:13;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;21592:13:52;;;21584:22;;;;;;;;;;;;;;;-1:-1:-1;;;;;21584:25:52;;;;;;;;;;;21561:48;;;;;;;;;;;;;;-1:-1:-1;;;21561:48:52;;;;;;;;;;21592:13;21561:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;21584:25;21561:48;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;21561:48:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;-1:-1:-1;;;21561:48:52;;;-1:-1:-1;21561:48:52;;;;;;;;;;;;-1:-1:-1;;;;;21561:48:52;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;21561:48:52;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;:13;21575:5;21561:20;;;;;;;;:::i;:::-;;;;;;:48;;;;21631:7;;;;;:::i;:::-;;;;21487:170;21464:3;;;;:::i;:::-;;;;21429:242;;;-1:-1:-1;21410:3:52;;21370:311;;;-1:-1:-1;21698:13:52;;20623:1095;-1:-1:-1;;;20623:1095:52:o;24994:242::-;-1:-1:-1;;;;;25163:18:52;;25131:29;25163:18;;;:7;:18;;;;;;;;-1:-1:-1;;;;;25163:30:52;;;;;;;;;25210:19;;;25203:26;;;;;;;;;;;;;;;;;25105:14;;25163:30;;25210:19;;25203:26;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;25203:26:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;24994:242;;;;:::o;3155:101:24:-;2334:13;:11;:13::i;:::-;3219:30:::1;3246:1;3219:18;:30::i;:::-;3155:101::o:0;23367:419:52:-;23452:34;;23498:282;23530:17;:24;23522:32;;23498:282;;;23579:14;23596:17;23614:5;23596:24;;;;;;;;:::i;:::-;;;;;;;;;;;;;-1:-1:-1;;;;;23652:37:52;;;;;:30;:37;;;;;;23596:24;;;;23652:45;;;;;;;;;23596:24;;-1:-1:-1;23741:28:52;23596:24;23652:45;23741:11;:28::i;:::-;23711:58;;;;:::i;:::-;;-1:-1:-1;;;23556:7:52;;23498:282;;;;23367:419;;;:::o;28242:148::-;28318:24;28368:15;28358:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;28358:25:52;;;;;;;;;;;;;;;;;;;;;;;28242:148;:::o;18075:294::-;2334:13:24;:11;:13::i;:::-;-1:-1:-1;;;;;18188:20:52;::::1;;::::0;;;:12:::1;:20;::::0;;;;;;;:27;;-1:-1:-1;;18188:27:52::1;18211:4;18188:27:::0;;::::1;::::0;;;18225:20;;;;;;;:33;;;18268:15:::1;:28:::0;;;;::::1;::::0;;;;;;::::1;::::0;;-1:-1:-1;;;;;;18268:28:52::1;::::0;::::1;::::0;;18311:51;18351:10:::1;::::0;18188:20;18311:51:::1;::::0;::::1;::::0;18248:10;10214:25:54;;10202:2;10187:18;;10068:177;18311:51:52::1;;;;;;;;18075:294:::0;;:::o;19797:124::-;-1:-1:-1;;;;;19888:20:52;;;;;;:13;:20;;;;;19881:33;;19856:13;;19888:20;19881:33;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19797:124;;;:::o;3822:799::-;3952:44;3976:19;3952:23;:44::i;:::-;4006:64;4032:23;4057:12;4006:25;:64::i;:::-;4112:10;4081:42;;;;:30;:42;;;;;;;;-1:-1:-1;;;;;4081:89:52;;;;;;;;;:112;;4174:19;;4081:42;:112;;4174:19;;4081:112;:::i;:::-;;;;-1:-1:-1;;4203:10:52;:27;;;;;;;-1:-1:-1;4203:27:52;;;;;;;;-1:-1:-1;;;;;;4203:27:52;4219:10;4203:27;;;;;;4245:123;;10214:25:54;;;-1:-1:-1;;;;;4245:123:52;;;4219:10;4245:123;;10202:2:54;10187:18;4245:123:52;;;;;;;4394:138;;-1:-1:-1;;;4394:138:52;;4378:13;;-1:-1:-1;;;;;4394:44:52;;;;;:138;;4452:10;;4484:4;;4503:19;;4394:138;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;4378:154;;4547:8;4542:73;;4578:26;;-1:-1:-1;;;4578:26:52;;;;;;;;;;;4542:73;3942:679;3822:799;;:::o;22549:115::-;22605:16;22640:17;22633:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;22633:24:52;;;;;;;;;;;;;;;;;;;;;;22549:115;:::o;8288:1312::-;8505:32;8529:7;8505:23;:32::i;:::-;8547:34;8571:9;8547:34;;:23;:34::i;:::-;8592:27;8608:10;8592:15;:27::i;:::-;-1:-1:-1;;;;;8729:18:52;;8697:29;8729:18;;;:7;:18;;;;;;;;-1:-1:-1;;;;;8729:30:52;;;;;;;;;;8773:20;;;;-1:-1:-1;;;8773:20:52;;;;:35;;;;;;;;:::i;:::-;;8769:86;;8829:26;;-1:-1:-1;;;8829:26:52;;;;;;;;;;;8769:86;8869:43;;-1:-1:-1;;;8869:43:52;;8901:10;8869:43;;;13226:51:54;8915:7:52;;-1:-1:-1;;;;;8869:31:52;;;;;13199:18:54;;8869:43:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:53;8865:109;;;8943:31;;-1:-1:-1;;;8943:31:52;;;;;;;;;;;8865:109;8988:29;;;;-1:-1:-1;;;;;8988:46:52;;;:29;;:46;8984:95;;9055:24;;-1:-1:-1;;;9055:24:52;;;;;;;;;;;8984:95;9090:53;;-1:-1:-1;;;9090:53:52;;9128:4;9090:53;;;21484:51:54;21551:18;;;21544:34;;;-1:-1:-1;;;;;9090:29:52;;;;;21457:18:54;;9090:53:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;9163:7:52;;:11;;-1:-1:-1;;;9163:7:52;;-1:-1:-1;;;;;9163:7:52;9173:1;9163:11;:::i;:::-;9153:7;;:21;;;;;-1:-1:-1;;;;;9153:21:52;;;;;-1:-1:-1;;;;;9153:21:52;;;;;;9184:19;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9184:19:52;9230:7;;-1:-1:-1;;;9230:7:52;;-1:-1:-1;;;;;9230:7:52;9213:24;;9263:10;9247:13;;;:26;9283:27;;;:15;;;:27;-1:-1:-1;;;;;9320:32:52;;:16;;;:32;9362:17;;;:33;;;-1:-1:-1;9405:18:52;;;-1:-1:-1;9405:37:52;;-1:-1:-1;9452:13:52;;;:23;;;9485:19;;;;:32;;;;;;;;-1:-1:-1;9485:32:52;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;;;;9485:32:52;;;-1:-1:-1;;;;;;9485:32:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;;9485:32:52;;;;;;;;;;;;;;;;;;;;;;;9452:6;;9485:32;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;-1:-1:-1;;9533:60:52;;;-1:-1:-1;;;;;21502:32:54;;21484:51;;21566:2;21551:18;;21544:34;;;-1:-1:-1;;;;;9533:60:52;;;-1:-1:-1;9546:10:52;;9533:60;;21457:18:54;9533:60:52;21310:274:54;6682:1105:52;6754:27;6770:10;6754:15;:27::i;:::-;6832:10;6792:29;6824:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;6824:31:52;;;;;;;;;6919:29;;;;6824:31;;6792:29;6894:85;;-1:-1:-1;;;;;6919:29:52;6962:7;6894:11;:85::i;:::-;6865:114;-1:-1:-1;7017:15:52;6993:20;;;;-1:-1:-1;;;6993:20:52;;;;:39;;;;;;;;:::i;:::-;;6989:94;;7053:30;;-1:-1:-1;;;7053:30:52;;;;;;;;;;;6989:94;7121:29;;;;7165:32;;-1:-1:-1;;;7165:32:52;;7186:10;7165:32;;;13226:51:54;-1:-1:-1;;;;;7121:29:52;;;;7200:7;;7121:29;;7165:20;;13199:18:54;;7165:32:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;:42;7161:98;;;7228:31;;-1:-1:-1;;;7228:31:52;;;;;;;;;;;7161:98;7307:18;7274:13;:29;;;:51;7270:261;;7374:18;7341:13;:29;;;:51;;;;;;;:::i;:::-;;;;-1:-1:-1;7270:261:52;;-1:-1:-1;7270:261:52;;7444:29;;;;;7519:1;7487:33;;;7444:29;-1:-1:-1;7270:261:52;7545:13;:29;;;7578:1;7545:34;7541:101;;7595:20;;;:36;;-1:-1:-1;;;;7595:36:52;-1:-1:-1;;;7595:36:52;;;7541:101;7688:20;;;;7652:66;;-1:-1:-1;;;7652:66:52;;-1:-1:-1;;;;;7652:23:52;;;;;;:66;;7676:10;;7688:20;;7710:7;;7652:66;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;7734:46:52;;;-1:-1:-1;;;;;23882:39:54;;23864:58;;23953:2;23938:18;;23931:34;;;7748:10:52;;7734:46;;23837:18:54;7734:46:52;;;;;;;6744:1043;;;6682:1105;;:::o;24201:524::-;-1:-1:-1;;;;;24335:20:52;;24298:7;24335:20;;;:12;:20;;;;;;;24365:58;;24391:32;;-1:-1:-1;;;24391:32:52;;24178:2:54;24391:32:52;;;24160:21:54;24217:2;24197:18;;;24190:30;-1:-1:-1;;;24236:18:54;;;24229:52;24298:18;;24391:32:52;23976:346:54;24365:58:52;24474:4;;:27;;-1:-1:-1;;;24474:27:52;;;;;10214:25:54;;;24434:37:52;;-1:-1:-1;;;;;24474:4:52;;:19;;10187:18:54;;24474:27:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;24543:18;;24434:67;;-1:-1:-1;24536:26:52;;24512:13;24577:22;;24573:61;;;24601:33;;-1:-1:-1;;;24601:33:52;;25470:2:54;24601:33:52;;;25452:21:54;25509:2;25489:18;;;25482:30;25548:25;25528:18;;;25521:53;25591:18;;24601:33:52;25268:347:54;24573:61:52;203:4:46;24688:7:52;24653:31;164:4:46;24653:5:52;:31;:::i;:::-;24652:43;;;;:::i;:::-;24651:67;;;;:::i;:::-;24644:74;24201:524;-1:-1:-1;;;;;;24201:524:52:o;16411:588::-;2334:13:24;:11;:13::i;:::-;16547:27:52::1;16563:10;16547:15;:27::i;:::-;16606:11;:18;16588:7;:14;:36;16584:126;;16647:52;;-1:-1:-1::0;;;16647:52:52::1;;;;;;;;;;;16584:126;16724:7;16719:157;16741:7;:14;16737:1;:18;;;16719:157;;;16803:11;16815:1;16803:14;;;;;;;;;;:::i;:::-;;;;;;;16776:12;:24;16789:7;16797:1;16789:10;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;16776:24:52::1;-1:-1:-1::0;;;;;16776:24:52::1;;;;;;;;;;;;:41;;;;16831:17;16854:7;16862:1;16854:10;;;;;;;;;;:::i;:::-;;::::0;;::::1;::::0;;;;;;;16831:34;;::::1;::::0;::::1;::::0;;-1:-1:-1;16831:34:52;;;;;;;::::1;::::0;;-1:-1:-1;;;;;;16831:34:52::1;-1:-1:-1::0;;;;;16831:34:52;;::::1;::::0;;;::::1;::::0;;16757:3;::::1;::::0;::::1;:::i;:::-;;;;16719:157;;;-1:-1:-1::0;16957:17:52::1;:24:::0;16890:102:::1;::::0;25972:4:54;25960:17;;;25942:36;;16927:10:52::1;::::0;16890:102:::1;::::0;25930:2:54;25915:18;16890:102:52::1;;;;;;;16411:588:::0;;:::o;9897:1127::-;10034:27;10050:10;10034:15;:27::i;:::-;10111:10;10071:29;10103:19;;;:7;:19;;;;;;;;-1:-1:-1;;;;;10103:31:52;;;;;;;;;;10148:20;;;;-1:-1:-1;;;10148:20:52;;;;:35;;;;;;;;:::i;:::-;;10144:86;;10204:26;;-1:-1:-1;;;10204:26:52;;;;;;;;;;;10144:86;10256:19;;;:26;-1:-1:-1;;;;;10245:37:52;;;10241:71;;;10291:21;;-1:-1:-1;;;10291:21:52;;;;;;;;;;;10241:71;10323:25;10351:13;:19;;10371:8;-1:-1:-1;;;;;10351:29:52;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;-1:-1:-1;10394:23:52;;;;;;:43;;;;;;;;:::i;:::-;;10390:92;;10458:24;;-1:-1:-1;;;10458:24:52;;;;;;;;;;;10390:92;10511:20;;-1:-1:-1;;;10511:20:52;;-1:-1:-1;;;;;10511:20:52;10497:10;:34;10493:71;;10540:24;;-1:-1:-1;;;10540:24:52;;;;;;;;;;;10493:71;10575:23;;;:33;;10601:7;;10575:23;-1:-1:-1;;10575:33:52;;10601:7;10575:33;;;;;;;;:::i;:::-;;;;;-1:-1:-1;10634:20:52;10623:7;:31;;;;;;;;:::i;:::-;;10619:221;;10670:58;10691:13;10706:11;10719:8;10670:20;:58::i;:::-;10619:221;;;10760:20;10749:7;:31;;;;;;;;:::i;:::-;;10745:95;;10796:33;10817:11;12502:23;;:46;;-1:-1:-1;;12502:46:52;12528:20;12502:46;;;12426:129;10796:33;10942:20;;;;-1:-1:-1;;;;;10855:162:52;;;10890:10;;10855:162;;-1:-1:-1;;;10942:20:52;;;;10936:27;;;;;;;;:::i;:::-;10983:23;;;;;;10977:30;;;;;;;;:::i;:::-;10855:162;;;26185:4:54;26173:17;;;26155:36;;26227:17;;;;26222:2;26207:18;;26200:45;26128:18;10855:162:52;;;;;;;10024:1000;;9897:1127;;;:::o;19314:189::-;19408:4;;:30;;-1:-1:-1;;;19408:30:52;;19397:8;;-1:-1:-1;;;;;19408:4:52;;:17;;:30;;19426:11;;;;19408:30;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;19448:4;;:48;;-1:-1:-1;;;19448:48:52;;19397:41;;-1:-1:-1;;;;;;19448:4:52;;:21;;19397:41;;19448:48;;19484:11;;;;19448:48;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;19387:116;19314:189;;:::o;3405:215:24:-;2334:13;:11;:13::i;:::-;-1:-1:-1;;;;;3489:22:24;::::1;3485:91;;3534:31;::::0;-1:-1:-1;;;3534:31:24;;3562:1:::1;3534:31;::::0;::::1;13226:51:54::0;13199:18;;3534:31:24::1;13080:203:54::0;3485:91:24::1;3585:28;3604:8;3585:18;:28::i;:::-;3405:215:::0;:::o;17134:706:52:-;2334:13:24;:11;:13::i;:::-;17235:27:52::1;17251:10;17235:15;:27::i;:::-;17277:7;17272:445;17294:7;:14;17290:1;:18;;;17272:445;;;17364:1;17356:10:::0;::::1;17329:12;:24;17342:7;17350:1;17342:10;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;17329:24:52::1;-1:-1:-1::0;;;;;17329:24:52::1;;;;;;;;;;;;:37;;;;17385:7;17380:327;17402:17;:24:::0;17398:28:::1;::::0;::::1;;17380:327;;;17479:7;17487:1;17479:10;;;;;;;;;;:::i;:::-;;;;;;;-1:-1:-1::0;;;;;17455:34:52::1;:17;17473:1;17455:20;;;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;-1:-1:-1;;;;;17455:20:52::1;:34:::0;17451:242:::1;;17536:17;17579:24:::0;;:28:::1;::::0;17606:1:::1;::::0;17579:28:::1;:::i;:::-;17536:93;;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;::::1;::::0;17513:17:::1;:20:::0;;-1:-1:-1;;;;;17536:93:52;;::::1;::::0;17513:20:::1;::::0;::::1;::::0;;::::1;;;;;:::i;:::-;;;;;;;;;:116;;;;;-1:-1:-1::0;;;;;17513:116:52::1;;;;;-1:-1:-1::0;;;;;17513:116:52::1;;;;;;17651:17;:23;;;;;;;:::i;:::-;;::::0;;;::::1;::::0;;;;-1:-1:-1;;17651:23:52;;;;;-1:-1:-1;;;;;;17651:23:52::1;::::0;;;;;17451:242:::1;17428:3:::0;::::1;::::0;::::1;:::i;:::-;;;;17380:327;;;-1:-1:-1::0;17310:3:52;::::1;::::0;::::1;:::i;:::-;;;;17272:445;;;-1:-1:-1::0;17798:17:52::1;:24:::0;17731:102:::1;::::0;25972:4:54;25960:17;;;25942:36;;17768:10:52::1;::::0;17731:102:::1;::::0;25930:2:54;25915:18;17731:102:52::1;;;;;;;17134:706:::0;:::o;136:150:50:-;215:1;204:7;:12;200:80;;239:30;;-1:-1:-1;;;239:30:50;;;;;;;;;;;19510:155:52;-1:-1:-1;;;;;19578:20:52;;;;;;:13;:20;;;;;:31;;;-1:-1:-1;;;19578:31:52;;;;19573:85;;19630:28;;-1:-1:-1;;;19630:28:52;;;;;;;;;;;26549:529;26713:23;26766:15;26752:11;:29;26748:84;;;26802:30;;-1:-1:-1;;;26802:30:52;;;;;;;;;;;26748:84;26863:19;26885:28;26897:6;26905:7;26885:11;:28::i;:::-;26863:50;-1:-1:-1;27036:3:52;27009:23;;;;26863:50;27009:23;:::i;1847:127:24:-;6931:20:25;:18;:20::i;:::-;1929:38:24::1;1954:12;1929:24;:38::i;292:220:50:-:0;-1:-1:-1;;;;;411:20:50;;443:1;411:20;;;;;;;;;;;407:99;;468:27;;-1:-1:-1;;;468:27:50;;;;;;;;;;;22848:257:52;22926:25;22954:20;22968:5;22954:13;:20::i;:::-;22926:48;;299:1:46;22988:17:52;:47;22984:115;;;23058:30;;-1:-1:-1;;;23058:30:52;;;;;;;;;;;21967:446;22027:7;22060:25;22099:29;22141:22;22157:5;22141:15;:22::i;:::-;22046:117;;-1:-1:-1;22046:117:52;-1:-1:-1;22173:39:52;22287:3;22216:67;254:2:46;22046:117:52;22216:67;:::i;:::-;22215:75;;;;:::i;:::-;22173:117;-1:-1:-1;22389:17:52;22320:53;203:4:46;22173:117:52;22320:53;:::i;:::-;22319:87;;;;:::i;:::-;22300:106;21967:446;-1:-1:-1;;;;;21967:446:52:o;2658:162:24:-;966:10:27;2717:7:24;1313:22;2570:8;-1:-1:-1;;;;;2570:8:24;;2441:144;2717:7;-1:-1:-1;;;;;2717:23:24;;2713:101;;2763:40;;-1:-1:-1;;;2763:40:24;;966:10:27;2763:40:24;;;13226:51:54;13199:18;;2763:40:24;13080:203:54;4603:312:26;4683:4;-1:-1:-1;;;;;4692:6:26;4675:23;;;:120;;;4789:6;-1:-1:-1;;;;;4753:42:26;:32;-1:-1:-1;;;;;;;;;;;2035:53:32;-1:-1:-1;;;;;2035:53:32;;1957:138;4753:32:26;-1:-1:-1;;;;;4753:42:26;;;4675:120;4658:251;;;4869:29;;-1:-1:-1;;;4869:29:26;;;;;;;;;;;29440:66:52;2334:13:24;:11;:13::i;6057:538:26:-;6174:17;-1:-1:-1;;;;;6156:50:26;;:52;;;;;;;;;;;;;;;;;;;;;;;;;;;;;-1:-1:-1;6156:52:26;;;;;;;;-1:-1:-1;;6156:52:26;;;;;;;;;;;;:::i;:::-;;;6152:437;;6518:60;;-1:-1:-1;;;6518:60:26;;-1:-1:-1;;;;;13244:32:54;;6518:60:26;;;13226:51:54;13199:18;;6518:60:26;13080:203:54;6152:437:26;-1:-1:-1;;;;;;;;;;;6250:40:26;;6246:120;;6317:34;;-1:-1:-1;;;6317:34:26;;;;;10214:25:54;;;10187:18;;6317:34:26;10068:177:54;6246:120:26;6379:54;6409:17;6428:4;6379:29;:54::i;5032:213::-;5106:4;-1:-1:-1;;;;;5115:6:26;5098:23;;5094:145;;5199:29;;-1:-1:-1;;;5199:29:26;;;;;;;;;;;3774:248:24;1313:22;3923:8;;-1:-1:-1;;;;;;3941:19:24;;-1:-1:-1;;;;;3941:19:24;;;;;;;;3975:40;;3923:8;;;;;3975:40;;3847:24;;3975:40;3837:185;;3774:248;:::o;11222:1104:52:-;11399:18;;;;;11376:20;;;;:41;;-1:-1:-1;;;;;;11376:41:52;-1:-1:-1;;;;;11399:18:52;;;11376:41;;;11427:20;;;:38;;-1:-1:-1;;;;11427:38:52;-1:-1:-1;;;11427:38:52;;;11475:23;;:46;;-1:-1:-1;;11475:46:52;;;;;;;11594:22;;;;11630:18;;;;11662:20;;;;-1:-1:-1;11696:21:52;;;-1:-1:-1;;11558:169:52;;11594:22;11630:18;11662:20;;;11696:21;11558:22;:169::i;:::-;11737:29;;;;:47;;;11884:20;;-1:-1:-1;;;11884:20:52;;-1:-1:-1;;;;;11884:20:52;11870:35;;;;:13;:35;;;;;:67;;;:86;;11737:47;;-1:-1:-1;11737:47:52;;11870:67;;:35;:86;;11737:47;;11870:86;:::i;:::-;;;;-1:-1:-1;;11985:20:52;;12009:1;;11971:35;;-1:-1:-1;;;11985:20:52;;-1:-1:-1;;;;;11985:20:52;11971:13;:35::i;:::-;:39;11967:111;;;12033:34;;-1:-1:-1;;;12033:34:52;;;;;;;;;;;11967:111;12095:21;;;;12144:18;;;;12176:20;;12210:18;;;;12088:150;;-1:-1:-1;;;12088:150:52;;-1:-1:-1;;;;;12095:21:52;;;;12088:42;;:150;;12144:18;;;;-1:-1:-1;;;12176:20:52;;;;;;;12088:150;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;-1:-1:-1;12300:18:52;;;;12268:20;;12254:65;;-1:-1:-1;;;;;28241:39:54;;28223:58;;-1:-1:-1;;;12268:20:52;;;-1:-1:-1;;;;;12268:20:52;;12254:65;;28211:2:54;28196:18;12254:65:52;28079:208:54;7084:141:25;8870:21;8560:40;-1:-1:-1;;;8560:40:25;;;;7146:73;;7191:17;;-1:-1:-1;;;7191:17:25;;;;;;;;;;;1980:235:24;6931:20:25;:18;:20::i;27846:304:52:-;-1:-1:-1;;;;;28038:20:52;;27946:25;28038:20;;;:13;:20;;;;;:39;;;;28111:32;28052:5;28111:25;:32::i;:::-;28087:56;;27846:304;;;:::o;2779:335:32:-;2870:37;2889:17;2870:18;:37::i;:::-;2922:27;;-1:-1:-1;;;;;2922:27:32;;;;;;;;2964:11;;:15;2960:148;;2995:53;3024:17;3043:4;2995:28;:53::i;2960:148::-;3079:18;:16;:18::i;2186:281::-;2263:17;-1:-1:-1;;;;;2263:29:32;;2296:1;2263:34;2259:119;;2320:47;;-1:-1:-1;;;2320:47:32;;-1:-1:-1;;;;;13244:32:54;;2320:47:32;;;13226:51:54;13199:18;;2320:47:32;13080:203:54;2259:119:32;-1:-1:-1;;;;;;;;;;;2387:73:32;;-1:-1:-1;;;;;;2387:73:32;-1:-1:-1;;;;;2387:73:32;;;;;;;;;;2186:281::o;4106:253:38:-;4189:12;4214;4228:23;4255:6;-1:-1:-1;;;;;4255:19:38;4275:4;4255:25;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4213:67;;;;4297:55;4324:6;4332:7;4341:10;4297:26;:55::i;6598:122:32:-;6648:9;:13;6644:70;;6684:19;;-1:-1:-1;;;6684:19:32;;;;;;;;;;;4625:582:38;4769:12;4798:7;4793:408;;4821:19;4829:10;4821:7;:19::i;:::-;4793:408;;;5045:17;;:22;:49;;;;-1:-1:-1;;;;;;5071:18:38;;;:23;5045:49;5041:119;;;5121:24;;-1:-1:-1;;;5121:24:38;;-1:-1:-1;;;;;13244:32:54;;5121:24:38;;;13226:51:54;13199:18;;5121:24:38;13080:203:54;5041:119:38;-1:-1:-1;5180:10:38;4793:408;4625:582;;;;;:::o;5743:516::-;5874:17;;:21;5870:383;;6102:10;6096:17;6158:15;6145:10;6141:2;6137:19;6130:44;5870:383;6225:17;;-1:-1:-1;;;6225:17:38;;;;;;;;;;;-1:-1:-1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;14:179:54;81:20;;-1:-1:-1;;;;;130:38:54;;120:49;;110:77;;183:1;180;173:12;110:77;14:179;;;:::o;198:184::-;256:6;309:2;297:9;288:7;284:23;280:32;277:52;;;325:1;322;315:12;277:52;348:28;366:9;348:28;:::i;691:127::-;752:10;747:3;743:20;740:1;733:31;783:4;780:1;773:15;807:4;804:1;797:15;823:213;907:1;900:5;897:12;887:143;;952:10;947:3;943:20;940:1;933:31;987:4;984:1;977:15;1015:4;1012:1;1005:15;1041:706;1143:6;1137:13;1132:3;1125:26;1100:10;1198:4;1190:6;1186:17;1180:24;1240:1;1236;1231:3;1227:11;1223:19;1292:2;1278:12;1274:21;1267:4;1262:3;1258:14;1251:45;1358:2;1350:4;1342:6;1338:17;1332:24;1328:33;1321:4;1316:3;1312:14;1305:57;;;1412:4;1404:6;1400:17;1394:24;1387:4;1382:3;1378:14;1371:48;1481:4;1473;1465:6;1461:17;1455:24;1451:35;1444:4;1439:3;1435:14;1428:59;1537:4;1529:6;1525:17;1519:24;1512:4;1507:3;1503:14;1496:48;1593:4;1585:6;1581:17;1575:24;1608:49;1642:14;1608:49;:::i;:::-;1682:4;1673:14;;1666:38;-1:-1:-1;;1736:4:54;1727:14;;1041:706::o;1752:446::-;1810:3;1848:5;1842:12;1875:6;1870:3;1863:19;1901:4;1930;1925:3;1921:14;1914:21;;1969:4;1962:5;1958:16;1992:1;2002:171;2016:6;2013:1;2010:13;2002:171;;;2072:53;2121:3;2112:6;2106:13;2072:53;:::i;:::-;2065:60;-1:-1:-1;2148:15:54;;;;2038:1;2031:9;2002:171;;;-1:-1:-1;2189:3:54;;1752:446;-1:-1:-1;;;;;1752:446:54:o;2203:131::-;2261:40;2295:5;2261:40;:::i;:::-;2310:18;;2203:131::o;2339:1101::-;2450:12;;-1:-1:-1;;;;;452:38:54;440:51;;2389:3;2417:6;2514:4;2507:5;2503:16;2497:23;2529:48;2571:4;2566:3;2562:14;2548:12;-1:-1:-1;;;;;568:31:54;556:44;;502:104;2529:48;;2626:4;2619:5;2615:16;2609:23;2602:4;2597:3;2593:14;2586:47;2681:4;2674:5;2670:16;2664:23;2696:48;2738:4;2733:3;2729:14;2713;678:4;667:16;655:29;;611:75;2696:48;;2793:4;2786:5;2782:16;2776:23;2769:4;2764:3;2760:14;2753:47;2848:4;2841:5;2837:16;2831:23;2886:2;2879:4;2874:3;2870:14;2863:26;2910:63;2969:2;2964:3;2960:12;2944:14;2910:63;:::i;:::-;2898:75;;;3022:4;3015:5;3011:16;3005:23;2998:4;2993:3;2989:14;2982:47;3077:4;3070:5;3066:16;3060:23;3092:50;3136:4;3131:3;3127:14;3111;-1:-1:-1;;;;;568:31:54;556:44;;502:104;3092:50;-1:-1:-1;3161:6:54;3204:14;;;3198:21;-1:-1:-1;;;;;568:31:54;3263:12;;;556:44;3295:6;3338:14;;;3332:21;3362:52;3401:12;;;3332:21;3362:52;:::i;:::-;-1:-1:-1;3430:4:54;;2339:1101;-1:-1:-1;;;;2339:1101:54:o;3445:260::-;3626:2;3615:9;3608:21;3589:4;3646:53;3695:2;3684:9;3680:18;3672:6;3646:53;:::i;3710:173::-;3778:20;;-1:-1:-1;;;;;3827:31:54;;3817:42;;3807:70;;3873:1;3870;3863:12;3888:127;3949:10;3944:3;3940:20;3937:1;3930:31;3980:4;3977:1;3970:15;4004:4;4001:1;3994:15;4020:275;4091:2;4085:9;4156:2;4137:13;;-1:-1:-1;;4133:27:54;4121:40;;-1:-1:-1;;;;;4176:34:54;;4212:22;;;4173:62;4170:88;;;4238:18;;:::i;:::-;4274:2;4267:22;4020:275;;-1:-1:-1;4020:275:54:o;4300:407::-;4365:5;-1:-1:-1;;;;;4391:6:54;4388:30;4385:56;;;4421:18;;:::i;:::-;4459:57;4504:2;4483:15;;-1:-1:-1;;4479:29:54;4510:4;4475:40;4459:57;:::i;:::-;4450:66;;4539:6;4532:5;4525:21;4579:3;4570:6;4565:3;4561:16;4558:25;4555:45;;;4596:1;4593;4586:12;4555:45;4645:6;4640:3;4633:4;4626:5;4622:16;4609:43;4699:1;4692:4;4683:6;4676:5;4672:18;4668:29;4661:40;4300:407;;;;;:::o;4712:118::-;4798:5;4791:13;4784:21;4777:5;4774:32;4764:60;;4820:1;4817;4810:12;4835:654;4919:6;4927;4935;4988:2;4976:9;4967:7;4963:23;4959:32;4956:52;;;5004:1;5001;4994:12;4956:52;5027:29;5046:9;5027:29;:::i;:::-;5017:39;;5107:2;5096:9;5092:18;5079:32;-1:-1:-1;;;;;5126:6:54;5123:30;5120:50;;;5166:1;5163;5156:12;5120:50;5189:22;;5242:4;5234:13;;5230:27;-1:-1:-1;5220:55:54;;5271:1;5268;5261:12;5220:55;5294:74;5360:7;5355:2;5342:16;5337:2;5333;5329:11;5294:74;:::i;:::-;5284:84;;;5418:2;5407:9;5403:18;5390:32;5431:28;5453:5;5431:28;:::i;:::-;5478:5;5468:15;;;4835:654;;;;;:::o;5494:258::-;5561:6;5569;5622:2;5610:9;5601:7;5597:23;5593:32;5590:52;;;5638:1;5635;5628:12;5590:52;5661:29;5680:9;5661:29;:::i;:::-;5651:39;;5709:37;5742:2;5731:9;5727:18;5709:37;:::i;:::-;5699:47;;5494:258;;;;;:::o;5757:156::-;5823:20;;5883:4;5872:16;;5862:27;;5852:55;;5903:1;5900;5893:12;5918:393;6002:6;6010;6018;6026;6079:3;6067:9;6058:7;6054:23;6050:33;6047:53;;;6096:1;6093;6086:12;6047:53;6132:9;6119:23;6109:33;;6161:36;6193:2;6182:9;6178:18;6161:36;:::i;:::-;6151:46;;6244:2;6233:9;6229:18;6216:32;6206:42;;6267:38;6301:2;6290:9;6286:18;6267:38;:::i;:::-;6257:48;;5918:393;;;;;;;:::o;6316:183::-;6376:4;-1:-1:-1;;;;;6401:6:54;6398:30;6395:56;;;6431:18;;:::i;:::-;-1:-1:-1;6476:1:54;6472:14;6488:4;6468:25;;6316:183::o;6504:674::-;6558:5;6611:3;6604:4;6596:6;6592:17;6588:27;6578:55;;6629:1;6626;6619:12;6578:55;6665:6;6652:20;6691:4;6715:60;6731:43;6771:2;6731:43;:::i;:::-;6715:60;:::i;:::-;6797:3;6821:2;6816:3;6809:15;6849:4;6844:3;6840:14;6833:21;;6906:4;6900:2;6897:1;6893:10;6885:6;6881:23;6877:34;6863:48;;6934:3;6926:6;6923:15;6920:35;;;6951:1;6948;6941:12;6920:35;6987:4;6979:6;6975:17;7001:148;7017:6;7012:3;7009:15;7001:148;;;7083:23;7102:3;7083:23;:::i;:::-;7071:36;;7127:12;;;;7034;;7001:148;;;-1:-1:-1;7167:5:54;6504:674;-1:-1:-1;;;;;;6504:674:54:o;7183:668::-;7237:5;7290:3;7283:4;7275:6;7271:17;7267:27;7257:55;;7308:1;7305;7298:12;7257:55;7344:6;7331:20;7370:4;7394:60;7410:43;7450:2;7410:43;:::i;7394:60::-;7476:3;7500:2;7495:3;7488:15;7528:4;7523:3;7519:14;7512:21;;7585:4;7579:2;7576:1;7572:10;7564:6;7560:23;7556:34;7542:48;;7613:3;7605:6;7602:15;7599:35;;;7630:1;7627;7620:12;7599:35;7666:4;7658:6;7654:17;7680:142;7696:6;7691:3;7688:15;7680:142;;;7762:17;;7750:30;;7800:12;;;;7713;;7680:142;;7856:819;8001:6;8009;8017;8025;8033;8086:3;8074:9;8065:7;8061:23;8057:33;8054:53;;;8103:1;8100;8093:12;8054:53;8126:29;8145:9;8126:29;:::i;:::-;8116:39;;8206:2;8195:9;8191:18;8178:32;-1:-1:-1;;;;;8270:2:54;8262:6;8259:14;8256:34;;;8286:1;8283;8276:12;8256:34;8309:61;8362:7;8353:6;8342:9;8338:22;8309:61;:::i;:::-;8299:71;;8423:2;8412:9;8408:18;8395:32;8379:48;;8452:2;8442:8;8439:16;8436:36;;;8468:1;8465;8458:12;8436:36;;8491:63;8546:7;8535:8;8524:9;8520:24;8491:63;:::i;:::-;8481:73;;;8573:38;8607:2;8596:9;8592:18;8573:38;:::i;:::-;8563:48;;8630:39;8664:3;8653:9;8649:19;8630:39;:::i;:::-;8620:49;;7856:819;;;;;;;;:::o;8680:254::-;8748:6;8756;8809:2;8797:9;8788:7;8784:23;8780:32;8777:52;;;8825:1;8822;8815:12;8777:52;8848:29;8867:9;8848:29;:::i;:::-;8838:39;8924:2;8909:18;;;;8896:32;;-1:-1:-1;;;8680:254:54:o;8939:330::-;9014:6;9022;9030;9083:2;9071:9;9062:7;9058:23;9054:32;9051:52;;;9099:1;9096;9089:12;9051:52;9122:29;9141:9;9122:29;:::i;:::-;9112:39;;9170:36;9202:2;9191:9;9187:18;9170:36;:::i;:::-;9160:46;;9225:38;9259:2;9248:9;9244:18;9225:38;:::i;:::-;9215:48;;8939:330;;;;;:::o;9274:524::-;9351:6;9359;9412:2;9400:9;9391:7;9387:23;9383:32;9380:52;;;9428:1;9425;9418:12;9380:52;9451:29;9470:9;9451:29;:::i;:::-;9441:39;;9531:2;9520:9;9516:18;9503:32;-1:-1:-1;;;;;9550:6:54;9547:30;9544:50;;;9590:1;9587;9580:12;9544:50;9613:22;;9666:4;9658:13;;9654:27;-1:-1:-1;9644:55:54;;9695:1;9692;9685:12;9644:55;9718:74;9784:7;9779:2;9766:16;9761:2;9757;9753:11;9718:74;:::i;:::-;9708:84;;;9274:524;;;;;:::o;9803:260::-;9871:6;9879;9932:2;9920:9;9911:7;9907:23;9903:32;9900:52;;;9948:1;9945;9938:12;9900:52;9971:29;9990:9;9971:29;:::i;:::-;9961:39;;10019:38;10053:2;10042:9;10038:18;10019:38;:::i;10432:843::-;10626:4;10655:2;10695;10684:9;10680:18;10725:2;10714:9;10707:21;10748:6;10783;10777:13;10814:6;10806;10799:22;10852:2;10841:9;10837:18;10830:25;;10914:2;10904:6;10901:1;10897:14;10886:9;10882:30;10878:39;10864:53;;10952:2;10944:6;10940:15;10973:1;10983:263;10997:6;10994:1;10991:13;10983:263;;;11090:2;11086:7;11074:9;11066:6;11062:22;11058:36;11053:3;11046:49;11118:48;11159:6;11150;11144:13;11118:48;:::i;:::-;11108:58;-1:-1:-1;11224:12:54;;;;11189:15;;;;11019:1;11012:9;10983:263;;;-1:-1:-1;11263:6:54;;10432:843;-1:-1:-1;;;;;;;10432:843:54:o;11280:682::-;11499:2;11551:21;;;11621:13;;11524:18;;;11643:22;;;11470:4;;11499:2;11722:15;;;;11696:2;11681:18;;;11470:4;11765:171;11779:6;11776:1;11773:13;11765:171;;;11835:53;11884:3;11875:6;11869:13;11835:53;:::i;:::-;11911:15;;;;11828:60;-1:-1:-1;11801:1:54;11794:9;11765:171;;;-1:-1:-1;11953:3:54;;11280:682;-1:-1:-1;;;;;;11280:682:54:o;11967:186::-;12026:6;12079:2;12067:9;12058:7;12054:23;12050:32;12047:52;;;12095:1;12092;12085:12;12047:52;12118:29;12137:9;12118:29;:::i;12158:658::-;12329:2;12381:21;;;12451:13;;12354:18;;;12473:22;;;12300:4;;12329:2;12552:15;;;;12526:2;12511:18;;;12300:4;12595:195;12609:6;12606:1;12603:13;12595:195;;;12674:13;;-1:-1:-1;;;;;12670:39:54;12658:52;;12765:15;;;;12730:12;;;;12706:1;12624:9;12595:195;;13288:250;13373:1;13383:113;13397:6;13394:1;13391:13;13383:113;;;13473:11;;;13467:18;13454:11;;;13447:39;13419:2;13412:10;13383:113;;;-1:-1:-1;;13530:1:54;13512:16;;13505:27;13288:250::o;13543:396::-;13692:2;13681:9;13674:21;13655:4;13724:6;13718:13;13767:6;13762:2;13751:9;13747:18;13740:34;13783:79;13855:6;13850:2;13839:9;13835:18;13830:2;13822:6;13818:15;13783:79;:::i;:::-;13923:2;13902:15;-1:-1:-1;;13898:29:54;13883:45;;;;13930:2;13879:54;;13543:396;-1:-1:-1;;13543:396:54:o;14136:541::-;14237:6;14245;14253;14261;14269;14277;14330:3;14318:9;14309:7;14305:23;14301:33;14298:53;;;14347:1;14344;14337:12;14298:53;14370:29;14389:9;14370:29;:::i;:::-;14360:39;;14418:37;14451:2;14440:9;14436:18;14418:37;:::i;:::-;14408:47;;14502:2;14491:9;14487:18;14474:32;14464:42;;14525:36;14557:2;14546:9;14542:18;14525:36;:::i;:::-;14515:46;;14608:3;14597:9;14593:19;14580:33;14570:43;;14632:39;14666:3;14655:9;14651:19;14632:39;:::i;:::-;14622:49;;14136:541;;;;;;;;:::o;14682:252::-;14749:6;14757;14810:2;14798:9;14789:7;14785:23;14781:32;14778:52;;;14826:1;14823;14816:12;14778:52;14849:28;14867:9;14849:28;:::i;14939:595::-;15057:6;15065;15118:2;15106:9;15097:7;15093:23;15089:32;15086:52;;;15134:1;15131;15124:12;15086:52;15174:9;15161:23;-1:-1:-1;;;;;15244:2:54;15236:6;15233:14;15230:34;;;15260:1;15257;15250:12;15230:34;15283:61;15336:7;15327:6;15316:9;15312:22;15283:61;:::i;:::-;15273:71;;15397:2;15386:9;15382:18;15369:32;15353:48;;15426:2;15416:8;15413:16;15410:36;;;15442:1;15439;15432:12;15410:36;;15465:63;15520:7;15509:8;15498:9;15494:24;15465:63;:::i;15539:417::-;15631:6;15639;15647;15700:2;15688:9;15679:7;15675:23;15671:32;15668:52;;;15716:1;15713;15706:12;15668:52;15739:28;15757:9;15739:28;:::i;:::-;15729:38;;15786:37;15819:2;15808:9;15804:18;15786:37;:::i;:::-;15776:47;;15873:2;15862:9;15858:18;15845:32;15906:1;15899:5;15896:12;15886:40;;15922:1;15919;15912:12;15961:626;16058:6;16066;16119:2;16107:9;16098:7;16094:23;16090:32;16087:52;;;16135:1;16132;16125:12;16087:52;16175:9;16162:23;-1:-1:-1;;;;;16245:2:54;16237:6;16234:14;16231:34;;;16261:1;16258;16251:12;16231:34;16299:6;16288:9;16284:22;16274:32;;16344:7;16337:4;16333:2;16329:13;16325:27;16315:55;;16366:1;16363;16356:12;16315:55;16406:2;16393:16;16432:2;16424:6;16421:14;16418:34;;;16448:1;16445;16438:12;16418:34;16501:7;16496:2;16486:6;16483:1;16479:14;16475:2;16471:23;16467:32;16464:45;16461:65;;;16522:1;16519;16512:12;16461:65;16553:2;16545:11;;;;;16575:6;;-1:-1:-1;15961:626:54;;-1:-1:-1;;;;15961:626:54:o;16592:348::-;16676:6;16729:2;16717:9;16708:7;16704:23;16700:32;16697:52;;;16745:1;16742;16735:12;16697:52;16785:9;16772:23;-1:-1:-1;;;;;16810:6:54;16807:30;16804:50;;;16850:1;16847;16840:12;16804:50;16873:61;16926:7;16917:6;16906:9;16902:22;16873:61;:::i;:::-;16863:71;16592:348;-1:-1:-1;;;;16592:348:54:o;16945:127::-;17006:10;17001:3;16997:20;16994:1;16987:31;17037:4;17034:1;17027:15;17061:4;17058:1;17051:15;17077:191;-1:-1:-1;;;;;17204:10:54;;;17192;;;17188:27;;17227:12;;;17224:38;;;17242:18;;:::i;:::-;17224:38;17077:191;;;;:::o;17273:127::-;17334:10;17329:3;17325:20;17322:1;17315:31;17365:4;17362:1;17355:15;17389:4;17386:1;17379:15;17405:380;17484:1;17480:12;;;;17527;;;17548:61;;17602:4;17594:6;17590:17;17580:27;;17548:61;17655:2;17647:6;17644:14;17624:18;17621:38;17618:161;;17701:10;17696:3;17692:20;17689:1;17682:31;17736:4;17733:1;17726:15;17764:4;17761:1;17754:15;17916:543;18018:2;18013:3;18010:11;18007:446;;;18054:1;18078:5;18075:1;18068:16;18122:4;18119:1;18109:18;18192:2;18180:10;18176:19;18173:1;18169:27;18163:4;18159:38;18228:4;18216:10;18213:20;18210:47;;;-1:-1:-1;18251:4:54;18210:47;18306:2;18301:3;18297:12;18294:1;18290:20;18284:4;18280:31;18270:41;;18361:82;18379:2;18372:5;18369:13;18361:82;;;18424:17;;;18405:1;18394:13;18361:82;;;18365:3;;;17916:543;;;:::o;18635:1345::-;18761:3;18755:10;-1:-1:-1;;;;;18780:6:54;18777:30;18774:56;;;18810:18;;:::i;:::-;18839:97;18929:6;18889:38;18921:4;18915:11;18889:38;:::i;:::-;18883:4;18839:97;:::i;:::-;18991:4;;19048:2;19037:14;;19065:1;19060:663;;;;19767:1;19784:6;19781:89;;;-1:-1:-1;19836:19:54;;;19830:26;19781:89;-1:-1:-1;;18592:1:54;18588:11;;;18584:24;18580:29;18570:40;18616:1;18612:11;;;18567:57;19883:81;;19030:944;;19060:663;17863:1;17856:14;;;17900:4;17887:18;;-1:-1:-1;;19096:20:54;;;19214:236;19228:7;19225:1;19222:14;19214:236;;;19317:19;;;19311:26;19296:42;;19409:27;;;;19377:1;19365:14;;;;19244:19;;19214:236;;;19218:3;19478:6;19469:7;19466:19;19463:201;;;19539:19;;;19533:26;-1:-1:-1;;19622:1:54;19618:14;;;19634:3;19614:24;19610:37;19606:42;19591:58;19576:74;;19463:201;-1:-1:-1;;;;;19710:1:54;19694:14;;;19690:22;19677:36;;-1:-1:-1;18635:1345:54:o;19985:168::-;20058:9;;;20089;;20106:15;;;20100:22;;20086:37;20076:71;;20127:18;;:::i;20158:217::-;20198:1;20224;20214:132;;20268:10;20263:3;20259:20;20256:1;20249:31;20303:4;20300:1;20293:15;20331:4;20328:1;20321:15;20214:132;-1:-1:-1;20360:9:54;;20158:217::o;20380:125::-;20445:9;;;20466:10;;;20463:36;;;20479:18;;:::i;20510:188::-;-1:-1:-1;;;;;20623:10:54;;;20635;;;20619:27;;20658:11;;;20655:37;;;20672:18;;:::i;21177:128::-;21244:9;;;21265:11;;;21262:37;;;21279:18;;:::i;21589:245::-;21656:6;21709:2;21697:9;21688:7;21684:23;21680:32;21677:52;;;21725:1;21722;21715:12;21677:52;21757:9;21751:16;21776:28;21798:5;21776:28;:::i;22192:184::-;22262:6;22315:2;22303:9;22294:7;22290:23;22286:32;22283:52;;;22331:1;22328;22321:12;22283:52;-1:-1:-1;22354:16:54;;22192:184;-1:-1:-1;22192:184:54:o;22690:375::-;-1:-1:-1;;;;;22948:15:54;;;22930:34;;23000:15;;;;22995:2;22980:18;;22973:43;23047:2;23032:18;;23025:34;;;;22880:2;22865:18;;22690:375::o;23330:135::-;23369:3;23390:17;;;23387:43;;23410:18;;:::i;:::-;-1:-1:-1;23457:1:54;23446:13;;23330:135::o;23470:217::-;23508:3;-1:-1:-1;;;;;23597:2:54;23590:5;23586:14;23624:2;23615:7;23612:15;23609:41;;23630:18;;:::i;:::-;23679:1;23666:15;;23470:217;-1:-1:-1;;;23470:217:54:o;24327:936::-;24421:6;24474:3;24462:9;24453:7;24449:23;24445:33;24442:53;;;24491:1;24488;24481:12;24442:53;24524:2;24518:9;24566:3;24558:6;24554:16;-1:-1:-1;;;;;24657:6:54;24645:10;24642:22;24637:2;24625:10;24622:18;24619:46;24616:72;;;24668:18;;:::i;:::-;24708:10;24704:2;24697:22;24747:9;24741:16;24728:29;;24800:5;24797:1;24786:20;24779:5;24776:31;24766:59;;24821:1;24818;24811:12;24766:59;24834:21;;;24900:2;24885:18;;24879:25;;24935:16;;;24923:29;;24913:57;;24966:1;24963;24956:12;24913:57;-1:-1:-1;24998:2:54;24986:15;;24979:32;25056:2;25041:18;;25035:25;25102:1;25091:22;;;25079:35;;25069:63;;25128:1;25125;25118:12;25069:63;25160:2;25148:15;;25141:32;25227:2;25212:18;;;25206:25;25189:15;;;25182:50;;;;-1:-1:-1;25152:6:54;24327:936;-1:-1:-1;24327:936:54:o;25620:175::-;25657:3;25701:4;25694:5;25690:16;25730:4;25721:7;25718:17;25715:43;;25738:18;;:::i;:::-;25787:1;25774:15;;25620:175;-1:-1:-1;;25620:175:54:o;26256:266::-;26344:6;26339:3;26332:19;26396:6;26389:5;26382:4;26377:3;26373:14;26360:43;-1:-1:-1;26448:1:54;26423:16;;;26441:4;26419:27;;;26412:38;;;;26504:2;26483:15;;;-1:-1:-1;;26479:29:54;26470:39;;;26466:50;;26256:266::o;26527:1226::-;26728:2;26780:21;;;26753:18;;;26836:22;;;-1:-1:-1;;26889:2:54;26938:1;26934:14;;;26919:30;;26915:39;;;26874:18;;26977:6;-1:-1:-1;27011:713:54;27025:6;27022:1;27019:13;27011:713;;;27090:22;;;-1:-1:-1;;27086:36:54;27074:49;;27162:20;;27237:14;27233:27;;;-1:-1:-1;;27229:41:54;27205:66;;27195:94;;27285:1;27282;27275:12;27195:94;27315:31;;27420:14;;;;27373:19;-1:-1:-1;;;;;27450:30:54;;27447:50;;;27493:1;27490;27483:12;27447:50;27546:6;27530:14;27526:27;27517:7;27513:41;27510:61;;;27567:1;27564;27557:12;27510:61;27594:50;27637:6;27629;27620:7;27594:50;:::i;:::-;27584:60;-1:-1:-1;;;27702:12:54;;;;27667:15;;;;27047:1;27040:9;27011:713;;;-1:-1:-1;27741:6:54;;26527:1226;-1:-1:-1;;;;;;;26527:1226:54:o;27758:127::-;27819:10;27814:3;27810:20;27807:1;27800:31;27850:4;27847:1;27840:15;27874:4;27871:1;27864:15;28292:287;28421:3;28459:6;28453:13;28475:66;28534:6;28529:3;28522:4;28514:6;28510:17;28475:66;:::i;:::-;28557:16;;;;;28292:287;-1:-1:-1;;28292:287:54:o",
    "linkReferences": {},
    "immutableReferences": {
      "47281": [
        { "start": 12698, "length": 32 },
        { "start": 12739, "length": 32 },
        { "start": 13060, "length": 32 }
      ]
    }
  },
  "methodIdentifiers": {
    "UPGRADE_INTERFACE_VERSION()": "ad3cb1cc",
    "addCollateralTokens(address[],bytes32[])": "eb703464",
    "addLoanableToken(address,bytes32)": "88bd6585",
    "createLendingRequest(uint256,uint8,uint256,address)": "1308aedc",
    "depositCollateral(address,uint256)": "a5d5db0c",
    "getAccountCollateralValue(address)": "7d1a4450",
    "getAllCollateralToken()": "b202dc20",
    "getAllOfferForUser(address,uint96)": "58944730",
    "getAllRequest()": "545569ba",
    "getLoanableAssets()": "86f5483f",
    "getRequestById(uint96)": "02727e34",
    "getUsdValue(address,uint256)": "c660d112",
    "getUserEmail(address)": "9480e948",
    "getUserRequest(address,uint96)": "1143e606",
    "get_gitCoinPoint(address)": "f2cc0ba5",
    "gets_addressToCollateralDeposited(address,address)": "527ed126",
    "initialize(address,address[],bytes32[],address,address)": "15b19dc2",
    "isVerified(address)": "b9209e33",
    "makeLendingOffer(address,uint96,uint256,uint8,uint256,address)": "bf343943",
    "owner()": "8da5cb5b",
    "proxiableUUID()": "52d1902d",
    "removeCollateralTokens(address[])": "f9f22ec2",
    "renounceOwnership()": "715018a6",
    "repayLoan(uint96,uint256)": "c147a892",
    "respondToLendingOffer(uint96,uint96,uint8)": "ecb0fe38",
    "serviceRequest(address,uint8,address)": "41239496",
    "transferOwnership(address)": "f2fde38b",
    "updateEmail(address,string,bool)": "065a1f87",
    "updateGPScore(address,uint256)": "42e292c1",
    "updatePriceFeeds(bytes[])": "ef9e5e28",
    "upgradeToAndCall(address,bytes)": "4f1ef286",
    "withdrawCollateral(address,uint256)": "350c35e9"
  },
  "rawMetadata": "{\"compiler\":{\"version\":\"0.8.24+commit.e11b9ed9\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"inputs\":[{\"internalType\":\"address\",\"name\":\"target\",\"type\":\"address\"}],\"name\":\"AddressEmptyCode\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"ERC1967InvalidImplementation\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"ERC1967NonPayable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"FailedInnerCall\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"InvalidInitialization\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"NotInitializing\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"OwnableInvalidOwner\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"account\",\"type\":\"address\"}],\"name\":\"OwnableUnauthorizedAccount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__BreaksHealthFactor\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__DateMustBeInFuture\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__EmailNotVerified\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InsufficientAllowance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InsufficientBalance\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InsufficientCollateral\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InsufficientCollateralDeposited\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InvalidAddress\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InvalidAmount\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InvalidId\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__InvalidToken\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__MustBeMoreThanZero\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__OfferNotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__RequestNotOpen\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__RequestNotServiced\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__TokenNotAllowed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__TokenNotLoanable\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__TransferFailed\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__Unauthorized\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"Protocol__tokensAndPriceFeedsArrayMustBeSameLength\",\"type\":\"error\"},{\"inputs\":[],\"name\":\"UUPSUnauthorizedCallContext\",\"type\":\"error\"},{\"inputs\":[{\"internalType\":\"bytes32\",\"name\":\"slot\",\"type\":\"bytes32\"}],\"name\":\"UUPSUnsupportedProxiableUUID\",\"type\":\"error\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_value\",\"type\":\"uint256\"}],\"name\":\"CollateralDeposited\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_tokenCollateralAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"CollateralWithdrawn\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":false,\"internalType\":\"uint64\",\"name\":\"version\",\"type\":\"uint64\"}],\"name\":\"Initialized\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"LoanRepayment\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint96\",\"name\":\"id\",\"type\":\"uint96\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"OfferAccepted\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_lender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"address\",\"name\":\"indexed_tokenAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"}],\"name\":\"OfferCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint96\",\"name\":\"requestId\",\"type\":\"uint96\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_interest\",\"type\":\"uint8\"}],\"name\":\"RequestCreated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"_offerId\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_status\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_offerStatus\",\"type\":\"uint8\"}],\"name\":\"RespondToLendingOffer\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"_requestId\",\"type\":\"uint8\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"}],\"name\":\"ServiceRequestSuccessful\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bytes32\",\"name\":\"_priceFeed\",\"type\":\"bytes32\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"}],\"name\":\"UpdateLoanableToken\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"sender\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint8\",\"name\":\"newTokensCount\",\"type\":\"uint8\"}],\"name\":\"UpdatedCollateralTokens\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"implementation\",\"type\":\"address\"}],\"name\":\"Upgraded\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"UPGRADE_INTERFACE_VERSION\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_priceFeeds\",\"type\":\"bytes32[]\"}],\"name\":\"addCollateralTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"bytes32\",\"name\":\"_priceFeed\",\"type\":\"bytes32\"}],\"name\":\"addLoanableToken\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_returnDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_loanCurrency\",\"type\":\"address\"}],\"name\":\"createLendingRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amountOfCollateral\",\"type\":\"uint256\"}],\"name\":\"depositCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getAccountCollateralValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_totalCollateralValueInUsd\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllCollateralToken\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"}],\"name\":\"getAllOfferForUser\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"enum Protocol.OfferStatus\",\"name\":\"offerStatus\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Offer[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getAllRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"requestId\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalRepayment\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"enum Protocol.OfferStatus\",\"name\":\"offerStatus\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Offer[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanRequestAddr\",\"type\":\"address\"},{\"internalType\":\"enum Protocol.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Request[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"getLoanableAssets\",\"outputs\":[{\"internalType\":\"address[]\",\"name\":\"_assets\",\"type\":\"address[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"}],\"name\":\"getRequestById\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"requestId\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalRepayment\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"enum Protocol.OfferStatus\",\"name\":\"offerStatus\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Offer[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanRequestAddr\",\"type\":\"address\"},{\"internalType\":\"enum Protocol.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_token\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"getUsdValue\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"getUserEmail\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"}],\"name\":\"getUserRequest\",\"outputs\":[{\"components\":[{\"internalType\":\"uint96\",\"name\":\"requestId\",\"type\":\"uint96\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_totalRepayment\",\"type\":\"uint256\"},{\"components\":[{\"internalType\":\"uint256\",\"name\":\"offerId\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"tokenAddr\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"author\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"enum Protocol.OfferStatus\",\"name\":\"offerStatus\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Offer[]\",\"name\":\"offer\",\"type\":\"tuple[]\"},{\"internalType\":\"uint256\",\"name\":\"returnDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"lender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"loanRequestAddr\",\"type\":\"address\"},{\"internalType\":\"enum Protocol.Status\",\"name\":\"status\",\"type\":\"uint8\"}],\"internalType\":\"struct Protocol.Request\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"get_gitCoinPoint\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_sender\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"_tokenAddr\",\"type\":\"address\"}],\"name\":\"gets_addressToCollateralDeposited\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_initialOwner\",\"type\":\"address\"},{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"},{\"internalType\":\"bytes32[]\",\"name\":\"_priceFeeds\",\"type\":\"bytes32[]\"},{\"internalType\":\"address\",\"name\":\"_peerAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"pythContract\",\"type\":\"address\"}],\"name\":\"initialize\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"}],\"name\":\"isVerified\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"},{\"internalType\":\"uint8\",\"name\":\"_interest\",\"type\":\"uint8\"},{\"internalType\":\"uint256\",\"name\":\"_returnedDate\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"makeLendingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"proxiableUUID\",\"outputs\":[{\"internalType\":\"bytes32\",\"name\":\"\",\"type\":\"bytes32\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"_tokens\",\"type\":\"address[]\"}],\"name\":\"removeCollateralTokens\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"repayLoan\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint96\",\"name\":\"_requestId\",\"type\":\"uint96\"},{\"internalType\":\"uint96\",\"name\":\"_offerId\",\"type\":\"uint96\"},{\"internalType\":\"enum Protocol.OfferStatus\",\"name\":\"_status\",\"type\":\"uint8\"}],\"name\":\"respondToLendingOffer\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_borrower\",\"type\":\"address\"},{\"internalType\":\"uint8\",\"name\":\"_requestId\",\"type\":\"uint8\"},{\"internalType\":\"address\",\"name\":\"_tokenAddress\",\"type\":\"address\"}],\"name\":\"serviceRequest\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"_email\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"_status\",\"type\":\"bool\"}],\"name\":\"updateEmail\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_score\",\"type\":\"uint256\"}],\"name\":\"updateGPScore\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes[]\",\"name\":\"priceUpdate\",\"type\":\"bytes[]\"}],\"name\":\"updatePriceFeeds\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newImplementation\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"upgradeToAndCall\",\"outputs\":[],\"stateMutability\":\"payable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"_tokenCollateralAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"_amount\",\"type\":\"uint256\"}],\"name\":\"withdrawCollateral\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"author\":\"Benjamin Faruna, Favour Aniogor\",\"errors\":{\"AddressEmptyCode(address)\":[{\"details\":\"There's no code at `target` (it is not a contract).\"}],\"ERC1967InvalidImplementation(address)\":[{\"details\":\"The `implementation` of the proxy is invalid.\"}],\"ERC1967NonPayable()\":[{\"details\":\"An upgrade function sees `msg.value > 0` that may be lost.\"}],\"FailedInnerCall()\":[{\"details\":\"A call to an address target failed. The target may have reverted.\"}],\"InvalidInitialization()\":[{\"details\":\"The contract is already initialized.\"}],\"NotInitializing()\":[{\"details\":\"The contract is not initializing.\"}],\"OwnableInvalidOwner(address)\":[{\"details\":\"The owner is not a valid owner account. (eg. `address(0)`)\"}],\"OwnableUnauthorizedAccount(address)\":[{\"details\":\"The caller account is not authorized to perform an operation.\"}],\"UUPSUnauthorizedCallContext()\":[{\"details\":\"The call is from an unauthorized context.\"}],\"UUPSUnsupportedProxiableUUID(bytes32)\":[{\"details\":\"The storage `slot` is unsupported as a UUID.\"}]},\"events\":{\"Initialized(uint64)\":{\"details\":\"Triggered when the contract has been initialized or reinitialized.\"},\"Upgraded(address)\":{\"details\":\"Emitted when the implementation is upgraded.\"}},\"kind\":\"dev\",\"methods\":{\"addCollateralTokens(address[],bytes32[])\":{\"params\":{\"_priceFeeds\":\"Array of price feed addresses for the new collateral tokens\",\"_tokens\":\"Array of new collateral token addresses\"}},\"addLoanableToken(address,bytes32)\":{\"details\":\"For adding more tokens that are loanable on the platform\",\"params\":{\"_priceFeed\":\"the address of the currency pair on chainlink\",\"_token\":\"the address of the token you want to be loanable on the protocol\"}},\"createLendingRequest(uint256,uint8,uint256,address)\":{\"details\":\"This function calculates the required repayments and checks the borrower's collateral before accepting a loan request.\",\"params\":{\"_amount\":\"The principal amount of the loan\",\"_interest\":\"The annual interest rate of the loan (in percentage points)\",\"_loanCurrency\":\"The currency in which the loan is denominated\",\"_returnDate\":\"The unix timestamp by when the loan should be repaid\"}},\"depositCollateral(address,uint256)\":{\"params\":{\"_amountOfCollateral\":\"The amount of collateral to deposit\",\"_tokenCollateralAddress\":\"The address of the token to deposit as collateral\"}},\"getAccountCollateralValue(address)\":{\"params\":{\"_user\":\"the address who you want to get their collateral value\"},\"returns\":{\"_totalCollateralValueInUsd\":\"returns the value of the user deposited collateral in USD\"}},\"getAllCollateralToken()\":{\"details\":\"get the collection of all collateral token\",\"returns\":{\"_0\":\"{address[] memory} the collection of collateral addresses\"}},\"getAllOfferForUser(address,uint96)\":{\"details\":\"gets all the offers for a particular user\",\"params\":{\"_borrower\":\"the user who is trying to borrow\",\"_requestId\":\"the id of the request you are trying to get the offers from\"},\"returns\":{\"_0\":\"{Offer[] memory} the collection of offers made\"}},\"getLoanableAssets()\":{\"returns\":{\"_assets\":\"the collection of token that can be loaned in the protocol\"}},\"getUsdValue(address,uint256)\":{\"details\":\"This uses chainlinks AggregatorV3Interface to get the price with the pricefeed address.\",\"params\":{\"_amount\":\"the amount of that token you want to get the USD equivalent of.\",\"_token\":\"a collateral token address that is allowed in our Smart Contract\"},\"returns\":{\"_0\":\"uint256 returns the equivalent amount in USD.\"}},\"getUserRequest(address,uint96)\":{\"details\":\"gets a request from a user\",\"params\":{\"_requestId\":\"the id of the request that was created by the user\",\"_user\":\"the addresss of the user\"},\"returns\":{\"_0\":\"Documents the return variables of a contract\\u2019s function state variable\"}},\"get_gitCoinPoint(address)\":{\"details\":\"for getting the gitcoinpoint score\",\"params\":{\"_user\":\"the address of you wan to check the score for.\"},\"returns\":{\"_score\":\"the user scors.\"}},\"gets_addressToCollateralDeposited(address,address)\":{\"details\":\"gets the amount of collateral auser has deposited\",\"params\":{\"_sender\":\"the user who has the collateral\",\"_tokenAddr\":\"the user who has the collateral\"},\"returns\":{\"_0\":\"{uint256} the return variables of a contract\\u2019s function state variable\"}},\"initialize(address,address[],bytes32[],address,address)\":{\"details\":\"Acts as our contructor\",\"params\":{\"_initialOwner\":\"a parameter just like in doxygen (must be followed by parameter name)\"}},\"makeLendingOffer(address,uint96,uint256,uint8,uint256,address)\":{\"params\":{\"_amount\":\"Amount of money the lender is willing to lend\",\"_borrower\":\"Address of the borrower who created the request\",\"_interest\":\"Interest rate proposed by the lender\",\"_requestId\":\"Unique identifier for the lending request\",\"_returnedDate\":\"Expected return date for the lent amount\",\"_tokenAddress\":\"Address of the token in which the loan is denominated\"}},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"proxiableUUID()\":{\"details\":\"Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier.\"},\"removeCollateralTokens(address[])\":{\"params\":{\"_tokens\":\"Array of collateral token addresses to remove\"}},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"respondToLendingOffer(uint96,uint96,uint8)\":{\"params\":{\"_offerId\":\"Identifier of the specific offer being responded to\",\"_requestId\":\"Identifier of the request to which the offer was made\",\"_status\":\"New status of the offer, can be ACCEPTED or REJECTED\"}},\"serviceRequest(address,uint8,address)\":{\"params\":{\"_borrower\":\"Address of the borrower to receive the funds\",\"_requestId\":\"Identifier of the request being serviced\",\"_tokenAddress\":\"Token in which the funds are being transferred\"}},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"},\"updateEmail(address,string,bool)\":{\"details\":\"for upating git coin post score\",\"params\":{\"_email\":\"the email address of the user that verified\",\"_status\":\"the status is to verify that the user is verified\",\"_user\":\"the address to the user you want to update\"}},\"updateGPScore(address,uint256)\":{\"details\":\"for upating git coin post score\",\"params\":{\"_score\":\"the gitcoin point score.\",\"_user\":\"the address to the user you want to update\"}},\"updatePriceFeeds(bytes[])\":{\"params\":{\"priceUpdate\":\"The encoded data to update the contract with the latest price.\"}},\"upgradeToAndCall(address,bytes)\":{\"custom:oz-upgrades-unsafe-allow-reachable\":\"delegatecall\",\"details\":\"Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event.\"},\"withdrawCollateral(address,uint256)\":{\"params\":{\"_amount\":\"Amount of collateral to withdraw\",\"_tokenCollateralAddress\":\"Address of the collateral token\"}}},\"stateVariables\":{\"addressToUser\":{\"details\":\"mapping the address of a user to its Struct\"},\"request\":{\"details\":\"mapping of users to their address\"},\"requestId\":{\"details\":\"request id;\"},\"s_PEER\":{\"details\":\"Our utility Token $PEER TODO: import the PEER Token Contract\"},\"s_addressToCollateralDeposited\":{\"details\":\"maps user to the value of balance he has collaterised\"},\"s_collateralToken\":{\"details\":\"Collection of all colleteral Adresses\"},\"s_isLoanable\":{\"details\":\"maps address of a token to see if it is loanable\"},\"s_loanableToken\":{\"details\":\"all loanable assets\"},\"s_priceFeeds\":{\"details\":\"maps collateral token to their price feed\"},\"s_requests\":{\"details\":\"Collection of all all the resquest;\"}},\"title\":\"The Proxy Contract for the protocol\",\"version\":1},\"userdoc\":{\"events\":{\"CollateralDeposited(address,address,uint256)\":{\"notice\":\"EVENTS ///\"}},\"kind\":\"user\",\"methods\":{\"addCollateralTokens(address[],bytes32[])\":{\"notice\":\"Adds new collateral tokens to the protocol\"},\"createLendingRequest(uint256,uint8,uint256,address)\":{\"notice\":\"Creates a request for a loan\"},\"getAccountCollateralValue(address)\":{\"notice\":\"This gets the amount of collateral a user has deposited in USD\"},\"getUsdValue(address,uint256)\":{\"notice\":\"This gets the USD value of amount of the token passsed.\"},\"makeLendingOffer(address,uint96,uint256,uint8,uint256,address)\":{\"notice\":\"Allows a lender to make an offer to a lending request\"},\"removeCollateralTokens(address[])\":{\"notice\":\"Removes collateral tokens from the protocol\"},\"respondToLendingOffer(uint96,uint96,uint8)\":{\"notice\":\"Responds to an offer for a lending request\"},\"serviceRequest(address,uint8,address)\":{\"notice\":\"Directly services a lending request by transferring funds to the borrower\"},\"updatePriceFeeds(bytes[])\":{\"notice\":\"This method updates the price feeds with the latest prices.\"},\"withdrawCollateral(address,uint256)\":{\"notice\":\"Withdraws collateral from the protocol\"}},\"notice\":\"This uses the EIP1822 UUPS standard from the opwnzeppelin library\",\"version\":1}},\"settings\":{\"compilationTarget\":{\"src/Protocol.sol\":\"Protocol\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":true,\"runs\":200},\"remappings\":[\":@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/\",\":@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/\",\":@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/\",\":chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/\",\":ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/\",\":erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/\",\":forge-std/=lib/forge-std/src/\",\":halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/\",\":openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/\",\":openzeppelin-contracts/=lib/openzeppelin-contracts/\"]},\"sources\":{\"lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol\":{\"keccak256\":\"0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6\",\"dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol\":{\"keccak256\":\"0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609\",\"dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol\":{\"keccak256\":\"0x490959f972df54829d0ffacb71fa025429d9b7b9ebd118f418b41e9c0041ef73\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1883bc1a16a88922abccd415d1b41caf00c38ee581ae3e5976018d9c17d2c4b7\",\"dweb:/ipfs/QmP2vzQM8RR8ce675KhuZEaUicAPRMUbPLwBsTpxByvn18\"]},\"lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol\":{\"keccak256\":\"0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9\",\"dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV\"]},\"lib/openzeppelin-contracts/contracts/access/Ownable.sol\":{\"keccak256\":\"0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6\",\"dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol\":{\"keccak256\":\"0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9\",\"dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v\"]},\"lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol\":{\"keccak256\":\"0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f\",\"dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt\"]},\"lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol\":{\"keccak256\":\"0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a\",\"dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE\"]},\"lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol\":{\"keccak256\":\"0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa\",\"dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol\":{\"keccak256\":\"0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229\",\"dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol\":{\"keccak256\":\"0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c\",\"dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq\"]},\"lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol\":{\"keccak256\":\"0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850\",\"dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV\"]},\"lib/openzeppelin-contracts/contracts/utils/Address.sol\":{\"keccak256\":\"0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245\",\"dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y\"]},\"lib/openzeppelin-contracts/contracts/utils/Context.sol\":{\"keccak256\":\"0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12\",\"dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF\"]},\"lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol\":{\"keccak256\":\"0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c\",\"dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/IPyth.sol\":{\"keccak256\":\"0xe06dbd61ccf409fffc0a2449eb8bb6c2d245609698c3c6eddad7cd0f3822d215\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://62867dd9f8a439d091da28c4d6cbd6f4d4ec0606291cdea7b70841e37c43e0da\",\"dweb:/ipfs/Qme4kF7yC3k2zxC87k9b6rhEbSjPNWZ5kLZCBdKqk43FbE\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/IPythEvents.sol\":{\"keccak256\":\"0x7ca8e03315d4516d6833c425a52c43e8cacf2077492074d2d36ae5c17899c9c8\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://ad1c69d157eccb09ce248e1ec021f2e58b61dd36160f5be3973a7bea4a899f64\",\"dweb:/ipfs/QmW1yXsDrMsuQKxtZanSZXpyUW2QwnCKVoCjS5fC3NoSVY\"]},\"node_modules/@pythnetwork/pyth-sdk-solidity/PythStructs.sol\":{\"keccak256\":\"0xade221177dda98ebd194c363f264ceea125bde0e6a7a72f7b54da3ac60316894\",\"license\":\"Apache-2.0\",\"urls\":[\"bzz-raw://a404dbbc64183995326c345cae27601d37c783b3d9030c8dc0ab4943fa2bf1da\",\"dweb:/ipfs/QmfNFesQffYisafmJFbKHxVFSD8fY49X1z9f8N7qtfW8AX\"]},\"src/Libraries/Constant.sol\":{\"keccak256\":\"0x5293918a713577cc254fe53b42d1a0fbdf3447a641c9ce7195eb14719cf02fa7\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://c3ef6168480261c50fe39d23cc7ba65551ab4f1cc6e19559acdc0094cfb86d33\",\"dweb:/ipfs/QmNnXosekTtzxZDSXPRyycvuXxjRtpbJNUmQErS4z57kFG\"]},\"src/Libraries/Errors.sol\":{\"keccak256\":\"0xd6da96cec3a3b983a95644a90e602650619e0ef10d52db8cabae4c164f69bdd4\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://4ab719e4ced41297e1309758170924741cb8f9fa8419c7ad981bfc727e182e40\",\"dweb:/ipfs/QmTKp6TunFCorDkKSM4jQJCkZSq2mh9wqEbAkBjJ7AcSSY\"]},\"src/Libraries/Event.sol\":{\"keccak256\":\"0x9a3ba52923ece62c5357b907fe4c1bd4b3b2c617472ac216c2e50f437afdbc76\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://16e7fa5660de4c51e6621dd314915f8b6ba0a361d5bf0ff4444e3006eb4510cd\",\"dweb:/ipfs/QmetMFqY2JheNsxNdHUk1kKEKxe2bnUQoNKWcFGFM6U4pC\"]},\"src/Libraries/Validator.sol\":{\"keccak256\":\"0xa09b9b2d4264c597810b7a759817747e1b5e775b642c0bfd22f774e9d819af01\",\"license\":\"SEE LICENSE IN LICENSE\",\"urls\":[\"bzz-raw://48c5af6a63149aae4a47501d3765a69c0b985891085b469cadffcced16808aea\",\"dweb:/ipfs/QmcEqXkSXdoTzdhcjWA7j37SwNsm5zXRHStSbweqEekHK7\"]},\"src/PeerToken.sol\":{\"keccak256\":\"0xb07889b50828d4e7296ca74dfa5da2c2647cbc61cfe9b43e9b4a557b22668154\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://31b80776d3453c40ce6c9821308cc6b85b9bb6e0fa56d823aa7e94f2c8c440fc\",\"dweb:/ipfs/QmfB3LnEkoDBLE7brQatbiV9r6WjdUojunzDtrmj2nrxqU\"]},\"src/Protocol.sol\":{\"keccak256\":\"0x7e663c724323c9297dbeac7ae912ebc01d3a77bf70cf417fe15d9d932b9a4aa1\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a31384d5d2ef51c6cb577aa083d93dfae8aa27d4abfbb5b55d9013996937f84e\",\"dweb:/ipfs/QmQE2HU5fhromUaKv4ePP3NsVATmMF8aDVnkpNWnRDy6qP\"]}},\"version\":1}",
  "metadata": {
    "compiler": { "version": "0.8.24+commit.e11b9ed9" },
    "language": "Solidity",
    "output": {
      "abi": [
        {
          "inputs": [
            { "internalType": "address", "name": "target", "type": "address" }
          ],
          "type": "error",
          "name": "AddressEmptyCode"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address"
            }
          ],
          "type": "error",
          "name": "ERC1967InvalidImplementation"
        },
        { "inputs": [], "type": "error", "name": "ERC1967NonPayable" },
        { "inputs": [], "type": "error", "name": "FailedInnerCall" },
        { "inputs": [], "type": "error", "name": "InvalidInitialization" },
        { "inputs": [], "type": "error", "name": "NotInitializing" },
        {
          "inputs": [
            { "internalType": "address", "name": "owner", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableInvalidOwner"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "account", "type": "address" }
          ],
          "type": "error",
          "name": "OwnableUnauthorizedAccount"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__BreaksHealthFactor"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__DateMustBeInFuture"
        },
        { "inputs": [], "type": "error", "name": "Protocol__EmailNotVerified" },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__InsufficientAllowance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__InsufficientBalance"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__InsufficientCollateral"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__InsufficientCollateralDeposited"
        },
        { "inputs": [], "type": "error", "name": "Protocol__InvalidAddress" },
        { "inputs": [], "type": "error", "name": "Protocol__InvalidAmount" },
        { "inputs": [], "type": "error", "name": "Protocol__InvalidId" },
        { "inputs": [], "type": "error", "name": "Protocol__InvalidToken" },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__MustBeMoreThanZero"
        },
        { "inputs": [], "type": "error", "name": "Protocol__OfferNotOpen" },
        { "inputs": [], "type": "error", "name": "Protocol__RequestNotOpen" },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__RequestNotServiced"
        },
        { "inputs": [], "type": "error", "name": "Protocol__TokenNotAllowed" },
        { "inputs": [], "type": "error", "name": "Protocol__TokenNotLoanable" },
        { "inputs": [], "type": "error", "name": "Protocol__TransferFailed" },
        { "inputs": [], "type": "error", "name": "Protocol__Unauthorized" },
        {
          "inputs": [],
          "type": "error",
          "name": "Protocol__tokensAndPriceFeedsArrayMustBeSameLength"
        },
        {
          "inputs": [],
          "type": "error",
          "name": "UUPSUnauthorizedCallContext"
        },
        {
          "inputs": [
            { "internalType": "bytes32", "name": "slot", "type": "bytes32" }
          ],
          "type": "error",
          "name": "UUPSUnsupportedProxiableUUID"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_value",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CollateralDeposited",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_tokenCollateralAddress",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "CollateralWithdrawn",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "uint64",
              "name": "version",
              "type": "uint64",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "Initialized",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "id",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "LoanRepayment",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "id",
              "type": "uint96",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OfferAccepted",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_lender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "indexed_tokenAddress",
              "type": "address",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint96",
              "name": "_requestId",
              "type": "uint96",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OfferCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "previousOwner",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "newOwner",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "OwnershipTransferred",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint96",
              "name": "requestId",
              "type": "uint96",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_amount",
              "type": "uint256",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "_interest",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RequestCreated",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint256",
              "name": "_offerId",
              "type": "uint256",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "_status",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint8",
              "name": "_offerStatus",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "RespondToLendingOffer",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "_requestId",
              "type": "uint8",
              "indexed": false
            },
            {
              "internalType": "uint256",
              "name": "amount",
              "type": "uint256",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "ServiceRequestSuccessful",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_token",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "bytes32",
              "name": "_priceFeed",
              "type": "bytes32",
              "indexed": false
            },
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "UpdateLoanableToken",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "sender",
              "type": "address",
              "indexed": true
            },
            {
              "internalType": "uint8",
              "name": "newTokensCount",
              "type": "uint8",
              "indexed": false
            }
          ],
          "type": "event",
          "name": "UpdatedCollateralTokens",
          "anonymous": false
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "implementation",
              "type": "address",
              "indexed": true
            }
          ],
          "type": "event",
          "name": "Upgraded",
          "anonymous": false
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "UPGRADE_INTERFACE_VERSION",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "_priceFeeds",
              "type": "bytes32[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addCollateralTokens"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_token", "type": "address" },
            {
              "internalType": "bytes32",
              "name": "_priceFeed",
              "type": "bytes32"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "addLoanableToken"
        },
        {
          "inputs": [
            { "internalType": "uint256", "name": "_amount", "type": "uint256" },
            { "internalType": "uint8", "name": "_interest", "type": "uint8" },
            {
              "internalType": "uint256",
              "name": "_returnDate",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_loanCurrency",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "createLendingRequest"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenCollateralAddress",
              "type": "address"
            },
            {
              "internalType": "uint256",
              "name": "_amountOfCollateral",
              "type": "uint256"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "depositCollateral"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAccountCollateralValue",
          "outputs": [
            {
              "internalType": "uint256",
              "name": "_totalCollateralValueInUsd",
              "type": "uint256"
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllCollateralToken",
          "outputs": [
            { "internalType": "address[]", "name": "", "type": "address[]" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            },
            { "internalType": "uint96", "name": "_requestId", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllOfferForUser",
          "outputs": [
            {
              "internalType": "struct Protocol.Offer[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint256",
                  "name": "offerId",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "tokenAddr",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "interest",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "returnDate",
                  "type": "uint256"
                },
                {
                  "internalType": "enum Protocol.OfferStatus",
                  "name": "offerStatus",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getAllRequest",
          "outputs": [
            {
              "internalType": "struct Protocol.Request[]",
              "name": "",
              "type": "tuple[]",
              "components": [
                {
                  "internalType": "uint96",
                  "name": "requestId",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "interest",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalRepayment",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Protocol.Offer[]",
                  "name": "offer",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "offerId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenAddr",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "author",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "interest",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Protocol.OfferStatus",
                      "name": "offerStatus",
                      "type": "uint8"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "returnDate",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "loanRequestAddr",
                  "type": "address"
                },
                {
                  "internalType": "enum Protocol.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "getLoanableAssets",
          "outputs": [
            {
              "internalType": "address[]",
              "name": "_assets",
              "type": "address[]"
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "uint96", "name": "_requestId", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getRequestById",
          "outputs": [
            {
              "internalType": "struct Protocol.Request",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint96",
                  "name": "requestId",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "interest",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalRepayment",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Protocol.Offer[]",
                  "name": "offer",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "offerId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenAddr",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "author",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "interest",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Protocol.OfferStatus",
                      "name": "offerStatus",
                      "type": "uint8"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "returnDate",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "loanRequestAddr",
                  "type": "address"
                },
                {
                  "internalType": "enum Protocol.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_token", "type": "address" },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUsdValue",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserEmail",
          "outputs": [
            { "internalType": "string", "name": "", "type": "string" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            { "internalType": "uint96", "name": "_requestId", "type": "uint96" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "getUserRequest",
          "outputs": [
            {
              "internalType": "struct Protocol.Request",
              "name": "",
              "type": "tuple",
              "components": [
                {
                  "internalType": "uint96",
                  "name": "requestId",
                  "type": "uint96"
                },
                {
                  "internalType": "address",
                  "name": "author",
                  "type": "address"
                },
                {
                  "internalType": "uint256",
                  "name": "amount",
                  "type": "uint256"
                },
                {
                  "internalType": "uint8",
                  "name": "interest",
                  "type": "uint8"
                },
                {
                  "internalType": "uint256",
                  "name": "_totalRepayment",
                  "type": "uint256"
                },
                {
                  "internalType": "struct Protocol.Offer[]",
                  "name": "offer",
                  "type": "tuple[]",
                  "components": [
                    {
                      "internalType": "uint256",
                      "name": "offerId",
                      "type": "uint256"
                    },
                    {
                      "internalType": "address",
                      "name": "tokenAddr",
                      "type": "address"
                    },
                    {
                      "internalType": "address",
                      "name": "author",
                      "type": "address"
                    },
                    {
                      "internalType": "uint256",
                      "name": "amount",
                      "type": "uint256"
                    },
                    {
                      "internalType": "uint8",
                      "name": "interest",
                      "type": "uint8"
                    },
                    {
                      "internalType": "uint256",
                      "name": "returnDate",
                      "type": "uint256"
                    },
                    {
                      "internalType": "enum Protocol.OfferStatus",
                      "name": "offerStatus",
                      "type": "uint8"
                    }
                  ]
                },
                {
                  "internalType": "uint256",
                  "name": "returnDate",
                  "type": "uint256"
                },
                {
                  "internalType": "address",
                  "name": "lender",
                  "type": "address"
                },
                {
                  "internalType": "address",
                  "name": "loanRequestAddr",
                  "type": "address"
                },
                {
                  "internalType": "enum Protocol.Status",
                  "name": "status",
                  "type": "uint8"
                }
              ]
            }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "get_gitCoinPoint",
          "outputs": [
            { "internalType": "uint256", "name": "_score", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_sender", "type": "address" },
            {
              "internalType": "address",
              "name": "_tokenAddr",
              "type": "address"
            }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "gets_addressToCollateralDeposited",
          "outputs": [
            { "internalType": "uint256", "name": "", "type": "uint256" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_initialOwner",
              "type": "address"
            },
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            },
            {
              "internalType": "bytes32[]",
              "name": "_priceFeeds",
              "type": "bytes32[]"
            },
            {
              "internalType": "address",
              "name": "_peerAddress",
              "type": "address"
            },
            {
              "internalType": "address",
              "name": "pythContract",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "initialize"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" }
          ],
          "stateMutability": "view",
          "type": "function",
          "name": "isVerified",
          "outputs": [{ "internalType": "bool", "name": "", "type": "bool" }]
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            },
            {
              "internalType": "uint96",
              "name": "_requestId",
              "type": "uint96"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" },
            { "internalType": "uint8", "name": "_interest", "type": "uint8" },
            {
              "internalType": "uint256",
              "name": "_returnedDate",
              "type": "uint256"
            },
            {
              "internalType": "address",
              "name": "_tokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "makeLendingOffer"
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "owner",
          "outputs": [
            { "internalType": "address", "name": "", "type": "address" }
          ]
        },
        {
          "inputs": [],
          "stateMutability": "view",
          "type": "function",
          "name": "proxiableUUID",
          "outputs": [
            { "internalType": "bytes32", "name": "", "type": "bytes32" }
          ]
        },
        {
          "inputs": [
            {
              "internalType": "address[]",
              "name": "_tokens",
              "type": "address[]"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "removeCollateralTokens"
        },
        {
          "inputs": [],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "renounceOwnership"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_requestId",
              "type": "uint96"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "repayLoan"
        },
        {
          "inputs": [
            {
              "internalType": "uint96",
              "name": "_requestId",
              "type": "uint96"
            },
            { "internalType": "uint96", "name": "_offerId", "type": "uint96" },
            {
              "internalType": "enum Protocol.OfferStatus",
              "name": "_status",
              "type": "uint8"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "respondToLendingOffer"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_borrower",
              "type": "address"
            },
            { "internalType": "uint8", "name": "_requestId", "type": "uint8" },
            {
              "internalType": "address",
              "name": "_tokenAddress",
              "type": "address"
            }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "serviceRequest"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "newOwner", "type": "address" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "transferOwnership"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            { "internalType": "string", "name": "_email", "type": "string" },
            { "internalType": "bool", "name": "_status", "type": "bool" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateEmail"
        },
        {
          "inputs": [
            { "internalType": "address", "name": "_user", "type": "address" },
            { "internalType": "uint256", "name": "_score", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "updateGPScore"
        },
        {
          "inputs": [
            {
              "internalType": "bytes[]",
              "name": "priceUpdate",
              "type": "bytes[]"
            }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "updatePriceFeeds"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "newImplementation",
              "type": "address"
            },
            { "internalType": "bytes", "name": "data", "type": "bytes" }
          ],
          "stateMutability": "payable",
          "type": "function",
          "name": "upgradeToAndCall"
        },
        {
          "inputs": [
            {
              "internalType": "address",
              "name": "_tokenCollateralAddress",
              "type": "address"
            },
            { "internalType": "uint256", "name": "_amount", "type": "uint256" }
          ],
          "stateMutability": "nonpayable",
          "type": "function",
          "name": "withdrawCollateral"
        }
      ],
      "devdoc": {
        "kind": "dev",
        "methods": {
          "addCollateralTokens(address[],bytes32[])": {
            "params": {
              "_priceFeeds": "Array of price feed addresses for the new collateral tokens",
              "_tokens": "Array of new collateral token addresses"
            }
          },
          "addLoanableToken(address,bytes32)": {
            "details": "For adding more tokens that are loanable on the platform",
            "params": {
              "_priceFeed": "the address of the currency pair on chainlink",
              "_token": "the address of the token you want to be loanable on the protocol"
            }
          },
          "createLendingRequest(uint256,uint8,uint256,address)": {
            "details": "This function calculates the required repayments and checks the borrower's collateral before accepting a loan request.",
            "params": {
              "_amount": "The principal amount of the loan",
              "_interest": "The annual interest rate of the loan (in percentage points)",
              "_loanCurrency": "The currency in which the loan is denominated",
              "_returnDate": "The unix timestamp by when the loan should be repaid"
            }
          },
          "depositCollateral(address,uint256)": {
            "params": {
              "_amountOfCollateral": "The amount of collateral to deposit",
              "_tokenCollateralAddress": "The address of the token to deposit as collateral"
            }
          },
          "getAccountCollateralValue(address)": {
            "params": {
              "_user": "the address who you want to get their collateral value"
            },
            "returns": {
              "_totalCollateralValueInUsd": "returns the value of the user deposited collateral in USD"
            }
          },
          "getAllCollateralToken()": {
            "details": "get the collection of all collateral token",
            "returns": {
              "_0": "{address[] memory} the collection of collateral addresses"
            }
          },
          "getAllOfferForUser(address,uint96)": {
            "details": "gets all the offers for a particular user",
            "params": {
              "_borrower": "the user who is trying to borrow",
              "_requestId": "the id of the request you are trying to get the offers from"
            },
            "returns": {
              "_0": "{Offer[] memory} the collection of offers made"
            }
          },
          "getLoanableAssets()": {
            "returns": {
              "_assets": "the collection of token that can be loaned in the protocol"
            }
          },
          "getUsdValue(address,uint256)": {
            "details": "This uses chainlinks AggregatorV3Interface to get the price with the pricefeed address.",
            "params": {
              "_amount": "the amount of that token you want to get the USD equivalent of.",
              "_token": "a collateral token address that is allowed in our Smart Contract"
            },
            "returns": { "_0": "uint256 returns the equivalent amount in USD." }
          },
          "getUserRequest(address,uint96)": {
            "details": "gets a request from a user",
            "params": {
              "_requestId": "the id of the request that was created by the user",
              "_user": "the addresss of the user"
            },
            "returns": {
              "_0": "Documents the return variables of a contract’s function state variable"
            }
          },
          "get_gitCoinPoint(address)": {
            "details": "for getting the gitcoinpoint score",
            "params": {
              "_user": "the address of you wan to check the score for."
            },
            "returns": { "_score": "the user scors." }
          },
          "gets_addressToCollateralDeposited(address,address)": {
            "details": "gets the amount of collateral auser has deposited",
            "params": {
              "_sender": "the user who has the collateral",
              "_tokenAddr": "the user who has the collateral"
            },
            "returns": {
              "_0": "{uint256} the return variables of a contract’s function state variable"
            }
          },
          "initialize(address,address[],bytes32[],address,address)": {
            "details": "Acts as our contructor",
            "params": {
              "_initialOwner": "a parameter just like in doxygen (must be followed by parameter name)"
            }
          },
          "makeLendingOffer(address,uint96,uint256,uint8,uint256,address)": {
            "params": {
              "_amount": "Amount of money the lender is willing to lend",
              "_borrower": "Address of the borrower who created the request",
              "_interest": "Interest rate proposed by the lender",
              "_requestId": "Unique identifier for the lending request",
              "_returnedDate": "Expected return date for the lent amount",
              "_tokenAddress": "Address of the token in which the loan is denominated"
            }
          },
          "owner()": { "details": "Returns the address of the current owner." },
          "proxiableUUID()": {
            "details": "Implementation of the ERC-1822 {proxiableUUID} function. This returns the storage slot used by the implementation. It is used to validate the implementation's compatibility when performing an upgrade. IMPORTANT: A proxy pointing at a proxiable contract should not be considered proxiable itself, because this risks bricking a proxy that upgrades to it, by delegating to itself until out of gas. Thus it is critical that this function revert if invoked through a proxy. This is guaranteed by the `notDelegated` modifier."
          },
          "removeCollateralTokens(address[])": {
            "params": {
              "_tokens": "Array of collateral token addresses to remove"
            }
          },
          "renounceOwnership()": {
            "details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner."
          },
          "respondToLendingOffer(uint96,uint96,uint8)": {
            "params": {
              "_offerId": "Identifier of the specific offer being responded to",
              "_requestId": "Identifier of the request to which the offer was made",
              "_status": "New status of the offer, can be ACCEPTED or REJECTED"
            }
          },
          "serviceRequest(address,uint8,address)": {
            "params": {
              "_borrower": "Address of the borrower to receive the funds",
              "_requestId": "Identifier of the request being serviced",
              "_tokenAddress": "Token in which the funds are being transferred"
            }
          },
          "transferOwnership(address)": {
            "details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
          },
          "updateEmail(address,string,bool)": {
            "details": "for upating git coin post score",
            "params": {
              "_email": "the email address of the user that verified",
              "_status": "the status is to verify that the user is verified",
              "_user": "the address to the user you want to update"
            }
          },
          "updateGPScore(address,uint256)": {
            "details": "for upating git coin post score",
            "params": {
              "_score": "the gitcoin point score.",
              "_user": "the address to the user you want to update"
            }
          },
          "updatePriceFeeds(bytes[])": {
            "params": {
              "priceUpdate": "The encoded data to update the contract with the latest price."
            }
          },
          "upgradeToAndCall(address,bytes)": {
            "custom:oz-upgrades-unsafe-allow-reachable": "delegatecall",
            "details": "Upgrade the implementation of the proxy to `newImplementation`, and subsequently execute the function call encoded in `data`. Calls {_authorizeUpgrade}. Emits an {Upgraded} event."
          },
          "withdrawCollateral(address,uint256)": {
            "params": {
              "_amount": "Amount of collateral to withdraw",
              "_tokenCollateralAddress": "Address of the collateral token"
            }
          }
        },
        "version": 1
      },
      "userdoc": {
        "kind": "user",
        "methods": {
          "addCollateralTokens(address[],bytes32[])": {
            "notice": "Adds new collateral tokens to the protocol"
          },
          "createLendingRequest(uint256,uint8,uint256,address)": {
            "notice": "Creates a request for a loan"
          },
          "getAccountCollateralValue(address)": {
            "notice": "This gets the amount of collateral a user has deposited in USD"
          },
          "getUsdValue(address,uint256)": {
            "notice": "This gets the USD value of amount of the token passsed."
          },
          "makeLendingOffer(address,uint96,uint256,uint8,uint256,address)": {
            "notice": "Allows a lender to make an offer to a lending request"
          },
          "removeCollateralTokens(address[])": {
            "notice": "Removes collateral tokens from the protocol"
          },
          "respondToLendingOffer(uint96,uint96,uint8)": {
            "notice": "Responds to an offer for a lending request"
          },
          "serviceRequest(address,uint8,address)": {
            "notice": "Directly services a lending request by transferring funds to the borrower"
          },
          "updatePriceFeeds(bytes[])": {
            "notice": "This method updates the price feeds with the latest prices."
          },
          "withdrawCollateral(address,uint256)": {
            "notice": "Withdraws collateral from the protocol"
          }
        },
        "version": 1
      }
    },
    "settings": {
      "remappings": [
        "@openzeppelin/contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/contracts/",
        "@openzeppelin/contracts/=lib/openzeppelin-contracts/contracts/",
        "@pythnetwork/pyth-sdk-solidity/=node_modules/@pythnetwork/pyth-sdk-solidity/",
        "chainlink-brownie-contracts/=lib/chainlink-brownie-contracts/contracts/src/v0.6/vendor/@arbitrum/nitro-contracts/src/",
        "ds-test/=lib/openzeppelin-contracts-upgradeable/lib/forge-std/lib/ds-test/src/",
        "erc4626-tests/=lib/openzeppelin-contracts-upgradeable/lib/erc4626-tests/",
        "forge-std/=lib/forge-std/src/",
        "halmos-cheatcodes/=lib/openzeppelin-contracts-upgradeable/lib/halmos-cheatcodes/src/",
        "openzeppelin-contracts-upgradeable/=lib/openzeppelin-contracts-upgradeable/",
        "openzeppelin-contracts/=lib/openzeppelin-contracts/"
      ],
      "optimizer": { "enabled": true, "runs": 200 },
      "metadata": { "bytecodeHash": "ipfs" },
      "compilationTarget": { "src/Protocol.sol": "Protocol" },
      "evmVersion": "paris",
      "libraries": {}
    },
    "sources": {
      "lib/openzeppelin-contracts-upgradeable/contracts/access/OwnableUpgradeable.sol": {
        "keccak256": "0xc163fcf9bb10138631a9ba5564df1fa25db9adff73bd9ee868a8ae1858fe093a",
        "urls": [
          "bzz-raw://9706d43a0124053d9880f6e31a59f31bc0a6a3dc1acd66ce0a16e1111658c5f6",
          "dweb:/ipfs/QmUFmfowzkRwGtDu36cXV9SPTBHJ3n7dG9xQiK5B28jTf2"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/Initializable.sol": {
        "keccak256": "0x631188737069917d2f909d29ce62c4d48611d326686ba6683e26b72a23bfac0b",
        "urls": [
          "bzz-raw://7a61054ae84cd6c4d04c0c4450ba1d6de41e27e0a2c4f1bcdf58f796b401c609",
          "dweb:/ipfs/QmUvtdp7X1mRVyC3CsHrtPbgoqWaXHp3S1ZR24tpAQYJWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/proxy/utils/UUPSUpgradeable.sol": {
        "keccak256": "0x490959f972df54829d0ffacb71fa025429d9b7b9ebd118f418b41e9c0041ef73",
        "urls": [
          "bzz-raw://1883bc1a16a88922abccd415d1b41caf00c38ee581ae3e5976018d9c17d2c4b7",
          "dweb:/ipfs/QmP2vzQM8RR8ce675KhuZEaUicAPRMUbPLwBsTpxByvn18"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts-upgradeable/contracts/utils/ContextUpgradeable.sol": {
        "keccak256": "0xdbef5f0c787055227243a7318ef74c8a5a1108ca3a07f2b3a00ef67769e1e397",
        "urls": [
          "bzz-raw://08e39f23d5b4692f9a40803e53a8156b72b4c1f9902a88cd65ba964db103dab9",
          "dweb:/ipfs/QmPKn6EYDgpga7KtpkA8wV2yJCYGMtc9K4LkJfhKX2RVSV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/access/Ownable.sol": {
        "keccak256": "0xff6d0bb2e285473e5311d9d3caacb525ae3538a80758c10649a4d61029b017bb",
        "urls": [
          "bzz-raw://8ed324d3920bb545059d66ab97d43e43ee85fd3bd52e03e401f020afb0b120f6",
          "dweb:/ipfs/QmfEckWLmZkDDcoWrkEvMWhms66xwTLff9DDhegYpvHo1a"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC1822.sol": {
        "keccak256": "0x2a1f9944df2015c081d89cd41ba22ffaf10aa6285969f0dc612b235cc448999c",
        "urls": [
          "bzz-raw://ef381843676aec64421200ee85eaa0b1356a35f28b9fc67e746a6bbb832077d9",
          "dweb:/ipfs/QmY8aorMYA2TeTCnu6ejDjzb4rW4t7TCtW4GZ6LoxTFm7v"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/interfaces/draft-IERC6093.sol": {
        "keccak256": "0x60c65f701957fdd6faea1acb0bb45825791d473693ed9ecb34726fdfaa849dd7",
        "urls": [
          "bzz-raw://ea290300e0efc4d901244949dc4d877fd46e6c5e43dc2b26620e8efab3ab803f",
          "dweb:/ipfs/QmcLLJppxKeJWqHxE2CUkcfhuRTgHSn8J4kijcLa5MYhSt"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/ERC1967/ERC1967Utils.sol": {
        "keccak256": "0x06a78f9b3ee3e6d0eb4e4cd635ba49960bea34cac1db8c0a27c75f2319f1fd65",
        "urls": [
          "bzz-raw://547d21aa17f4f3f1a1a7edf7167beff8dd9496a0348d5588f15cc8a4b29d052a",
          "dweb:/ipfs/QmT16JtRQSWNpLo9W23jr6CzaMuTAcQcjJJcdRd8HLJ6cE"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/proxy/beacon/IBeacon.sol": {
        "keccak256": "0xc59a78b07b44b2cf2e8ab4175fca91e8eca1eee2df7357b8d2a8833e5ea1f64c",
        "urls": [
          "bzz-raw://5aa4f07e65444784c29cd7bfcc2341b34381e4e5b5da9f0c5bd00d7f430e66fa",
          "dweb:/ipfs/QmWRMh4Q9DpaU9GvsiXmDdoNYMyyece9if7hnfLz7uqzWM"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/ERC20.sol": {
        "keccak256": "0xc3e1fa9d1987f8d349dfb4d6fe93bf2ca014b52ba335cfac30bfe71e357e6f80",
        "urls": [
          "bzz-raw://c5703ccdeb7b1d685e375ed719117e9edf2ab4bc544f24f23b0d50ec82257229",
          "dweb:/ipfs/QmTdwkbQq7owpCiyuzE7eh5LrD2ddrBCZ5WHVsWPi1RrTS"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/IERC20.sol": {
        "keccak256": "0xc6a8ff0ea489379b61faa647490411b80102578440ab9d84e9a957cc12164e70",
        "urls": [
          "bzz-raw://0ea104e577e63faea3b69c415637e99e755dcbf64c5833d7140c35a714d6d90c",
          "dweb:/ipfs/Qmau6x4Ns9XdyynRCNNp3RhLqijJjFm7z5fyZazfYFGYdq"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/token/ERC20/extensions/IERC20Metadata.sol": {
        "keccak256": "0xaa761817f6cd7892fcf158b3c776b34551cde36f48ff9703d53898bc45a94ea2",
        "urls": [
          "bzz-raw://0ad7c8d4d08938c8dfc43d75a148863fb324b80cf53e0a36f7e5a4ac29008850",
          "dweb:/ipfs/QmcrhfPgVNf5mkdhQvy1pMv51TFokD3Y4Wa5WZhFqVh8UV"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Address.sol": {
        "keccak256": "0xaf28a975a78550e45f65e559a3ad6a5ad43b9b8a37366999abd1b7084eb70721",
        "urls": [
          "bzz-raw://b7bd24e224f67f65bfadf85dc2929fa965456bb2415478bd0125471b5ce35245",
          "dweb:/ipfs/QmRaydGr8BTHs1kvaZfsNU69pKzUAGFrvABn1KiRSbE51y"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/Context.sol": {
        "keccak256": "0x493033a8d1b176a037b2cc6a04dad01a5c157722049bbecf632ca876224dd4b2",
        "urls": [
          "bzz-raw://6a708e8a5bdb1011c2c381c9a5cfd8a9a956d7d0a9dc1bd8bcdaf52f76ef2f12",
          "dweb:/ipfs/Qmax9WHBnVsZP46ZxEMNRQpLQnrdE4dK8LehML1Py8FowF"
        ],
        "license": "MIT"
      },
      "lib/openzeppelin-contracts/contracts/utils/StorageSlot.sol": {
        "keccak256": "0x32ba59b4b7299237c8ba56319110989d7978a039faf754793064e967e5894418",
        "urls": [
          "bzz-raw://1ae50c8b562427df610cc4540c9bf104acca7ef8e2dcae567ae7e52272281e9c",
          "dweb:/ipfs/QmTHiadFCSJUPpRjNegc5SahmeU8bAoY8i9Aq6tVscbcKR"
        ],
        "license": "MIT"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/IPyth.sol": {
        "keccak256": "0xe06dbd61ccf409fffc0a2449eb8bb6c2d245609698c3c6eddad7cd0f3822d215",
        "urls": [
          "bzz-raw://62867dd9f8a439d091da28c4d6cbd6f4d4ec0606291cdea7b70841e37c43e0da",
          "dweb:/ipfs/Qme4kF7yC3k2zxC87k9b6rhEbSjPNWZ5kLZCBdKqk43FbE"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/IPythEvents.sol": {
        "keccak256": "0x7ca8e03315d4516d6833c425a52c43e8cacf2077492074d2d36ae5c17899c9c8",
        "urls": [
          "bzz-raw://ad1c69d157eccb09ce248e1ec021f2e58b61dd36160f5be3973a7bea4a899f64",
          "dweb:/ipfs/QmW1yXsDrMsuQKxtZanSZXpyUW2QwnCKVoCjS5fC3NoSVY"
        ],
        "license": "Apache-2.0"
      },
      "node_modules/@pythnetwork/pyth-sdk-solidity/PythStructs.sol": {
        "keccak256": "0xade221177dda98ebd194c363f264ceea125bde0e6a7a72f7b54da3ac60316894",
        "urls": [
          "bzz-raw://a404dbbc64183995326c345cae27601d37c783b3d9030c8dc0ab4943fa2bf1da",
          "dweb:/ipfs/QmfNFesQffYisafmJFbKHxVFSD8fY49X1z9f8N7qtfW8AX"
        ],
        "license": "Apache-2.0"
      },
      "src/Libraries/Constant.sol": {
        "keccak256": "0x5293918a713577cc254fe53b42d1a0fbdf3447a641c9ce7195eb14719cf02fa7",
        "urls": [
          "bzz-raw://c3ef6168480261c50fe39d23cc7ba65551ab4f1cc6e19559acdc0094cfb86d33",
          "dweb:/ipfs/QmNnXosekTtzxZDSXPRyycvuXxjRtpbJNUmQErS4z57kFG"
        ],
        "license": "MIT"
      },
      "src/Libraries/Errors.sol": {
        "keccak256": "0xd6da96cec3a3b983a95644a90e602650619e0ef10d52db8cabae4c164f69bdd4",
        "urls": [
          "bzz-raw://4ab719e4ced41297e1309758170924741cb8f9fa8419c7ad981bfc727e182e40",
          "dweb:/ipfs/QmTKp6TunFCorDkKSM4jQJCkZSq2mh9wqEbAkBjJ7AcSSY"
        ],
        "license": "MIT"
      },
      "src/Libraries/Event.sol": {
        "keccak256": "0x9a3ba52923ece62c5357b907fe4c1bd4b3b2c617472ac216c2e50f437afdbc76",
        "urls": [
          "bzz-raw://16e7fa5660de4c51e6621dd314915f8b6ba0a361d5bf0ff4444e3006eb4510cd",
          "dweb:/ipfs/QmetMFqY2JheNsxNdHUk1kKEKxe2bnUQoNKWcFGFM6U4pC"
        ],
        "license": "MIT"
      },
      "src/Libraries/Validator.sol": {
        "keccak256": "0xa09b9b2d4264c597810b7a759817747e1b5e775b642c0bfd22f774e9d819af01",
        "urls": [
          "bzz-raw://48c5af6a63149aae4a47501d3765a69c0b985891085b469cadffcced16808aea",
          "dweb:/ipfs/QmcEqXkSXdoTzdhcjWA7j37SwNsm5zXRHStSbweqEekHK7"
        ],
        "license": "SEE LICENSE IN LICENSE"
      },
      "src/PeerToken.sol": {
        "keccak256": "0xb07889b50828d4e7296ca74dfa5da2c2647cbc61cfe9b43e9b4a557b22668154",
        "urls": [
          "bzz-raw://31b80776d3453c40ce6c9821308cc6b85b9bb6e0fa56d823aa7e94f2c8c440fc",
          "dweb:/ipfs/QmfB3LnEkoDBLE7brQatbiV9r6WjdUojunzDtrmj2nrxqU"
        ],
        "license": "MIT"
      },
      "src/Protocol.sol": {
        "keccak256": "0x7e663c724323c9297dbeac7ae912ebc01d3a77bf70cf417fe15d9d932b9a4aa1",
        "urls": [
          "bzz-raw://a31384d5d2ef51c6cb577aa083d93dfae8aa27d4abfbb5b55d9013996937f84e",
          "dweb:/ipfs/QmQE2HU5fhromUaKv4ePP3NsVATmMF8aDVnkpNWnRDy6qP"
        ],
        "license": "MIT"
      }
    },
    "version": 1
  },
  "id": 52
}
